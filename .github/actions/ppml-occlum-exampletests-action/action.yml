name: 'Run PPML Occlum ExampleTests'
description: 'Run PPML Occlum ExampleTests'
runs:
  using: "composite"
  steps:
    - name: Set environment variable
      shell: bash
      run: |
        echo "WORKFLOW_VARIABLE=$(echo ${Env:status_1_spark})" >> $Env:GITHUB_ENV
        echo "WORKFLOW_VARIABLE=$(echo ${Env:status_2_bigdl_lenet_mnist})" >> $Env:GITHUB_ENV
        echo "WORKFLOW_VARIABLE=$(echo ${Env:status_3_bigdl_resnet_cifar10})" >> $Env:GITHUB_ENV
        echo "WORKFLOW_VARIABLE=$(echo ${Env:status_4_spark_tpch})" >> $Env:GITHUB_ENV
        echo "WORKFLOW_VARIABLE=$(echo ${Env:status_5_spark_ut})" >> $Env:GITHUB_ENV
        echo "WORKFLOW_VARIABLE=$(echo ${Env:status_6_spark_xgboost})" >> $Env:GITHUB_ENV
        echo "WORKFLOW_VARIABLE=$(echo ${Env:status_7_spark_gbt})" >> $Env:GITHUB_ENV

      env:
        status_1_spark_pi: 1
        status_2_bigdl_lenet_mnist: 1
        status_3_bigdl_resnet_cifar10: 1
        status_4_spark_tpch: 1
        status_5_spark_ut: 0
        status_6_spark_xgboost: 1
        status_7_spark_gbt: 1

    - name: Set environment variables
      shell: bash
      run: |
        whoami

        export LOCAL_IP=172.168.0.207
        export CPUSET="12-16"
        export CONTAINER_NAME="spark-occlum-jenkins"

        export DATA_PATH=/home/icx/glorysdj/data
        export KEYS_PATH=/home/icx/glorysdj/keys
        export SECURE_PASSWORD_PATH=/home/icx/glorysdj/password
        export SGX_MEM_SIZE=30g
    - name: Pull docker image
      shell: bash
      run: |
        sudo docker pull $IMAGE

    - name: Remove old container
      shell: bash
      run: |
        sudo docker rm -f $CONTAINER_NAME

    - name: Build container
      shell: bash
      run: |
        sudo docker run -itd \
          --net=host \
          --cpuset-cpus=$CPUSET \
          --oom-kill-disable \
          --device=/dev/sgx/enclave \
          --device=/dev/sgx/provision \
          -v /var/run/aesmd/aesm.socket:/var/run/aesmd/aesm.socket \
          -v $DATA_PATH:/opt/occlum_spark/data \
          -v $KEYS_PATH:/opt/keys \
          --name=$CONTAINER_NAME \
          -e LOCAL_IP=$LOCAL_IP \
          -e SGX_MEM_SIZE=$SGX_MEM_SIZE \
          $IMAGE \

    - name: test the env
      shell: bash
      run: env

    - name: print status 1
      shell: bash
      run: echo $status_1_spark_pi

    - name: status_1_spark_pi 
      if: ${{${Env:status_1_spark_pi} != 0}}
      shell: bash
      run: |
        echo "################## start spark pi"
        echo "example.1 spark pi"
        sudo docker exec -i $CONTAINER_NAME bash -c "cd /opt && \
           bash run_spark_on_occlum_glibc.sh pi | tee test-spark-pi-sgx.log && \
           cat test-spark-pi-sgx.log | egrep 'Pi is roughly 3'"
        status_1_spark_pi=$(echo $?)

    - name: status_2_bigdl_lenet_mnist
      if: ${{$status_2_bigdl_lenet_mnist != 0}}
      shell: bash
      run: |
        echo "################## start bigdl lenet mnist"
        echo "example.2 bigdl lenet mnist"
        sudo docker exec -i $CONTAINER_NAME bash -c "cd /opt && \
          sed -i 's#        run_spark_lenet_mnist#        run_spark_lenet_mnist -b 4 -e 1#g' run_spark_on_occlum_glibc.sh && \
          bash run_spark_on_occlum_glibc.sh lenet -b 8 -e 1 | tee bigdl-lenet-mnist.log && \
          cat bigdl-lenet-mnist.log | egrep 'records/second. Loss is'"
        status_2_bigdl_lenet_mnist=$(echo $?)

    - name: status_3_bigdl_resnet_cifar10
      if: ${{$status_3_bigdl_resnet_cifar10 != 0}}
      shell: bash
      run: |
        echo "################## start bigdl resnet cifar10"
        echo "example.3 bigdl resnet cifar10"
        sudo docker exec -i $CONTAINER_NAME bash -c "cd /opt && \
          sed -i 's#        run_spark_resnet_cifar#        run_spark_resnet_cifar --nEpochs 1#g' run_spark_on_occlum_glibc.sh && \
          bash run_spark_on_occlum_glibc.sh resnet | tee bigdl-resnet-cifar10.log && \
          cat bigdl-resnet-cifar10.log | egrep 'Current momentum is'"
       status_3_bigdl_resnet_cifar10=$(echo $?)

    - name: status_4_spark_tpc
      if: ${{$status_4_spark_tpc != 0}}
      shell: bash
      run: |
        echo "################## start spark tpch"
        echo "example.4 spark tpch"
        sudo docker exec -i $CONTAINER_NAME bash -c "cd /opt && \
          sed -i 's#spark.driver.memory=12g#spark.driver.memory=2g#g' run_spark_on_occlum_glibc.sh && \
          sed -i 's#spark.executor.instances=8#spark.executor.instances=2#g' run_spark_on_occlum_glibc.sh && \
          sed -i 's#executor-memory 8G#executor-memory 2G#g' run_spark_on_occlum_glibc.sh && \
          sed -i 's#-Xmx78g -Xms78g#-Xmx10g -Xms10g#g' run_spark_on_occlum_glibc.sh && \
          sed -i 's#/host/data /host/data/output#/host/data/tpch /host/data/output 1#g' run_spark_on_occlum_glibc.sh && \
          bash run_spark_on_occlum_glibc.sh tpch | tee spark-tpch.log && \
          cat spark-tpch.log | egrep '1 finished'"
        status_4_spark_tpch=$(echo $?)

    - name: status_5_spark_ut
      if: ${{$status_5_spark_ut != 0}}
      shell: bash
      run: |
        echo "################## start spark unit test"
        echo "example.5 spark unit test"
        sudo docker exec -i $CONTAINER_NAME bash -c "cd /opt && \
          sed -i 's#192.168.0.111#$LOCAL_IP#g' run_spark_on_occlum_glibc.sh && \
          bash run_spark_on_occlum_glibc.sh ut | tee spark-unit-test.log && \
          cat spark-unit-test.log | egrep 'FINISHED o.a.s.status.api.v1.sql.SqlResourceSuite:'"
        status_5_spark_ut=$(echo $?)

    - name: status_6_spark_xgboost
      if: ${{$status_6_spark_xgboost != 0}}
      shell: bash
      run: |
        echo "################## start spark xgboost"
        echo "example.6 spark xgboost"
        sudo docker exec -i $CONTAINER_NAME bash -c "cd /opt && \
          sed -i 's#-i /host/data -s /host/data/model -t 2 -r 100 -d 2 -w 1#-i /host/data/xgboost -s /host/data/xgboost/model -t 2 -r 100 -d 2 -w 1#g' run_spark_on_occlum_glibc.sh && \
          bash run_spark_on_occlum_glibc.sh xgboost | tee spark-xgboost.log && \
          cat spark-xgboost.log | egrep 'RabitTracker-akka.actor.default-dispatcher'"
        status_6_spark_xgboost=$(echo $?)

    - name: status_7_spark_gbt
      if: ${{$status_7_spark_gbt != 0}}
      shell: bash
      run: |
        echo "################## start spark gbt"
        echo "example.7 spark gbt"
        sudo docker exec -i $CONTAINER_NAME bash -c "cd /opt && \
          sed -i 's#-i /host/data -s /host/data/model -I 100 -d 2#-i /host/data/gbt -s /host/data/gbt/model -I 100 -d 2#g' run_spark_on_occlum_glibc.sh && \
          bash run_spark_on_occlum_glibc.sh gbt | tee spark-gbt.log && \
          cat spark-gbt.log | egrep 'RabitTracker-akka.actor.default-dispatcher'"
        status_7_spark_gbt=$(echo $?)

    - name: Get the return value
      shell: bash
      run: |
        echo "status_1_spark_pi $status_1_spark_pi"
        echo "status_2_bigdl_lenet_mnist $status_2_bigdl_lenet_mnist"
        echo "status_3_bigdl_resnet_cifar10 $status_3_bigdl_resnet_cifar10"
        echo "status_4_spark_tpch $status_4_spark_tpch"
        #echo "status_5_spark_ut $status_5_spark_ut"
        echo "status_6_spark_xgboost $status_6_spark_xgboost"
        echo "status_7_spark_gbt $status_7_spark_gbt"

