name: Weekly Build Docker Publish kms-utils/pccs

on:
  schedule:
    - cron: '0 17 * * 1'

  workflow_dispatch:
    inputs:
      tag:
        description: 'e.g. 0.3.0'
        required: true
        default: '0.3.0'
        type: string

jobs:
  deploy-docker:
    runs-on: [self-hosted, Shire]
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set the variable
      env:
        DEFAULT_TAG: '0.3.0'
      run: echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
    - name: docker deploy kms-util
      run: |
        export IMAGE=intelanalytics/kms-utils
        cd ppml/services/kms-utils/docker
        echo "########################################"
        echo "############## kms-utils ###############"
        echo "########################################"
        docker build \
          --no-cache=true \
          --build-arg http_proxy=${HTTP_PROXY} \
          --build-arg https_proxy=${HTTPS_PROXY} \
          --build-arg JDK_URL=${JDK_URL} \
          -t $IMAGE:$TAG -f ./Dockerfile .
        docker tag ${IMAGE}:${TAG} 10.239.45.10/arda/${IMAGE}:${TAG}
        docker push 10.239.45.10/arda/${IMAGE}:${TAG}
        docker rmi -f ${IMAGE}:${TAG} 10.239.45.10/arda/${IMAGE}:${TAG}
    - name: docker deploy pccs
      run: |
        export IMAGE=intelanalytics/pccs
        cd ppml/services/pccs/docker
        echo "########################################"
        echo "################# PCCS #################"
        echo "########################################"
        docker build \
          --no-cache=true \
          --build-arg http_proxy=${HTTP_PROXY} \
          --build-arg https_proxy=${HTTPS_PROXY} \
          -t $IMAGE:$TAG -f ./Dockerfile .
        docker tag ${IMAGE}:${TAG} 10.239.45.10/arda/${IMAGE}:${TAG}
        docker push 10.239.45.10/arda/${IMAGE}:${TAG}
        docker rmi -f ${IMAGE}:${TAG} 10.239.45.10/arda/${IMAGE}:${TAG}

    - name: "Set time variable"
      run: |
        export NOW=$( date '+%F_%H:%M:%S' )
        echo "TIME=${NOW}" >> $GITHUB_ENV
        
    - name: "Create Badge"
      uses: schneegans/dynamic-badges-action@v1.4.0
      with:
        auth: ${{ secrets.GIST_KEY }}
        gistID: cf03d51e8deddebdb546d986d24f3cd5
        filename: docker-publish-kmsutil-pccs.json
        label: Time
        message: is ${{ env.TIME }}
        valColorRange: ${{ env.TIME }}
        maxColorRange: 100
        minColorRange: 0