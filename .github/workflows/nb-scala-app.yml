# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Nightly Build Scala App

on:
  pull_request:
    branches: [ "main" ]
  #release:
   # types: [published]
  schedule:
    - cron: '0 15 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:

    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.8.2

    - name: Set up Maven Settings
      uses: s4u/maven-settings-action@v2.6.0
      with:
        sonatypeSnapshots: true
        apacheSnapshots: true
        servers: |
          [{
            "id": "central",
            "configuration": {
              "httpConfiguration": {
                "all": {
                  "connectionTimeout": "3600000",
                  "readTimeout": "3600000"
                  }
                }
              }
          }]
        mirrors: '[{"id": "ardaNexus", "name": "ardaNexus", "mirrorOf": "*", "url": "${NEXUS_URL}" }]'

    - name: Set up Python 
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy
        pip install tensorflow==1.15.0
        pip install jupyter
        apt-get update
        apt-get install wget 

        wget https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.tgz
        gunzip scala-2.11.8.tgz
        tar -xf scala-2.11.8.tar -C /opt
        export SCALA_HOME=/opt/scala-2.11.8

        wget http://archive.apache.org/dist/spark/spark-2.4.6/spark-2.4.6-bin-hadoop2.7.tgz
        tar -xf spark-2.4.6-bin-hadoop2.7.tgz -C /opt/

    - name: Run Test
      #run: python -m build
      run: |
          export SPARK_LOCAL_HOSTNAME=localhost
          export SPARK_HOME=/opt/spark-2.4.6-bin-hadoop2.7
          export FTP_URI=ftp://zoo:1234qwer@10.112.231.51
          export MASTER=local[4]
          export no_proxy="10.239.45.10:8081,10.112.231.51,10.239.45.10"
          chmod a+x apps/run-scala-app-test.sh
          apps/run-scala-app-test.sh
          
          rm -rf /opt/scala-2.11.8 scala-2.11.8.tar
          #rm -rf /opt/spark-3.1.2-bin-hadoop2.7 spark-3.1.2-bin-hadoop2.7.tgz
          rm -rf /opt/spark-2.4.6-bin-hadoop2.7 spark-2.4.6-bin-hadoop2.7.tgz
      env:
        BIGDL_ROOT: ${{ github.workspace }}
        ANALYTICS_ZOO_ROOT: ${{ github.workspace }}


