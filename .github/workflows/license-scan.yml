name: license-scan

on:
  push:
    branches: [ "wip/shaojun/debug" ]
  #pull_request:
    #branches: [ "main" ]
  schedule:
    - cron: '0 3 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  fossa-scan:
    runs-on: [self-hosted, Linux, Bree]
    steps:
    - name: "Checkout Code"
      uses: actions/checkout@v3

    - name: "Run FOSSA Scan"
      uses: fossas/fossa-action@main # Use a specific version if locking is preferred
      with:
        api-key: ${{ secrets.FOSSAAPIKEY }}
        
    - name: "Run FOSSA Test"
      uses: fossas/fossa-action@main # Use a specific version if locking is preferred
      with:
        api-key: ${{ secrets.FOSSAAPIKEY }}
        run-tests: true
    
    - name: Set up JDK8
      if: ${{ failure() }}
      uses: ./.github/actions/jdk-setup-action

    - name: Set up maven
      if: ${{ failure() }}
      uses: ./.github/actions/maven-setup-action

    - name: "Debug Failure"
      if: ${{ failure() }}
      run: |
        ls
        #spark3.1.2
        sed -i 's/<artifactId>${spark-version.project}<\/artifactId>/<artifactId>${spark-version.project}-${SPARK_PLATFORM}<\/artifactId>/' scala/dllib/pom.xml
        sed -i 's/<artifactId>3.0<\/artifactId>/<artifactId>3.0-${SPARK_PLATFORM}<\/artifactId>/' scala/common/spark-version/3.0/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/common/spark-version/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/common/spark-version/3.0/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/dllib/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/orca/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/friesian/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/grpc/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/serving/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/ppml/pom.xml
        sed -i 's/<artifactId>bigdl-parent-spark_${spark.version}<\/artifactId>/<artifactId>bigdl-parent-spark_3.1.2<\/artifactId>/' scala/assembly/pom.xml
        mvn dependency:tree -Dhttp.proxyHost=${{ secrets.HTTP_PROXY_HOST_2 }} -Dhttp.proxyPort=${{ secrets.HTTP_PROXY_PORT_2 }} -Dhttps.proxyHost=${{ secrets.HTTP_PROXY_HOST_2 }} -Dhttps.proxyPort=${{ secrets.HTTP_PROXY_PORT_3 }} -Dspark.version=3.1.2 -DSPARK_PLATFORM=SPARK_3.1 -P spark_3.x --file scala/pom.xml
        mvn clean package -Dhttp.proxyHost=${{ secrets.HTTP_PROXY_HOST_2 }} -Dhttp.proxyPort=${{ secrets.HTTP_PROXY_PORT_2 }} -Dhttps.proxyHost=${{ secrets.HTTP_PROXY_HOST_2 }} -Dhttps.proxyPort=${{ secrets.HTTP_PROXY_PORT_3 }} -DskipTests -Dspark.version=3.1.2 -DSPARK_PLATFORM=SPARK_3.1 -P spark_3.x --file scala/pom.xml
        echo "ls -d scala/assembly/target/*"
        ls -d scala/assembly/target/*
        echo ""
        echo "zipinfo -1 scala/assembly/target/bigdl-assembly-spark_3.1.2-2.1.0-SNAPSHOT-dist-all.zip 'jars/*.jar'"
        zipinfo -1 scala/assembly/target/bigdl-assembly-spark_3.1.2-2.1.0-SNAPSHOT-dist-all.zip 'jars/*.jar'
    
    - name: Create Job Badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: f91eb10af4d9dbe216ba0f0da71cace9
        is-self-hosted-runner: true
        file-name: fossa-scan.json
        type: job
        job-name: fossa-scan
         

  create-workflow-badge:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: create workflow badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: 966d4c0bf23c67662120d1bf4b1c88dc
        file-name: license-scan.json
        type: workflow


