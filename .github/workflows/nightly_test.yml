name: Nightly Test

on:
  pull_request:
     branchs: [ main ]
  schedule:
    - cron: '0 13 * * *' # GMT time, 13:00 GMT == 21:00 China
  workflow_dispatch:
    inputs:
      artifact:
        description: 'select which job to run("all" will make all jobs run)'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - Orca-Python-Ray-Py37-Spark3
        - Orca-Python-Py37-Spark3
        - Orca-Ray-Ctx-Example
        - Orca-Python-Horovod-Tf2-Py37-Spark3
        - Orca-Python-Horovod-Pytorch-Py37-Spark3
        - Orca-Jep-Python-Py37-Spark2
        - Orca-Python-Rayonspark-Tf2-Py37
        - Orca-Jep-ExampleTest-Py37-Spark2
        - Orca-Python-ExampleTest-Py37-Spark3
        - Orca-Python-ExampleTest-Ray-Py37-Spark3
        - Orca-Python-ExampleTest-Horovod-Pytorch-Py37-Spark3
        - Orca-Python-ExampleTest-Horovod-Tf-Py37-Spark3
        - Dllib-Scala-UT
        - Friesian-Scala-UT
        - PPML-Scala-UT
        - PPML-Python-UT-Spark3
        - PPML-Spark-PySpark-Local-Sql-UT-On-Gramine
        - PPML-Occlum-ExampleTests
        - PPML-spark-Local-Example-Tests-on-Gramine
        - Friesian-Python-Py37-Spark3
      image:
        description: 'docker image name'
        required: true
        default: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-big-data-ml-python-gramine'
        type: string
      tag:
        description: 'docker image tag'
        required: true
        default: 'latest'
        type: string


env:
  GIST_ID: bc8a699b455bced4a1aef138ad5df07e

permissions:
  contents: read
  packages: write

jobs:
  Orca-Python-ExampleTest-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-ExampleTest-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-exampletest-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-ExampleTest-Py37-Spark3.json
        type: job
        job-name: Orca-Python-ExampleTest-Py37-Spark3
        runner-hosted-on: 'Shanghai'


  Orca-Python-ExampleTest-Ray-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-ExampleTest-Ray-Py37-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-exampletest-ray-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-ExampleTest-Ray-Py37-Spark3.json
        type: job
        job-name: Orca-Python-ExampleTest-Ray-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Jep-ExampleTest-Py37-Spark2:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Jep-ExampleTest-Py37-Spark2' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-jep-exampletest-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-jep-exampletest-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Jep-ExampleTest-Py37-Spark2.json
        type: job
        job-name: Orca-Jep-ExampleTest-Py37-Spark2
        runner-hosted-on: 'Shanghai'

  Orca-Python-ExampleTest-Horovod-Pytorch-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-ExampleTest-Horovod-Pytorch-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-horovod-pytorch-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-exampletest-horovod-pytorch-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-ExampleTest-Horovod-Pytorch-Py37-Spark3.json
        type: job
        job-name: Orca-Python-ExampleTest-Horovod-Pytorch-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Python-ExampleTest-Horovod-Tf-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-ExampleTest-Horovod-Tf-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-horovod-tf2-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-exampletest-horovod-tf2-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-ExampleTest-Horovod-Tf-Py37-Spark3.json
        type: job
        job-name: Orca-Python-ExampleTest-Horovod-Tf-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Python-Ray-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Ray-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-ray-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-Ray-Py37-Spark3.json
        type: job
        job-name: Orca-Python-Ray-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Python-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-Py37-Spark3.json
        type: job
        job-name: Orca-Python-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Python-Horovod-Tf2-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Horovod-Tf2-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-horovod-tf2-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-horovod-tf2-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-Horovod-Tf2-Py37-Spark3.json
        type: job
        job-name: Orca-Python-Horovod-Tf2-Py37-Spark3
        runner-hosted-on: 'Shanghai'
  
  Orca-Python-Horovod-Pytorch-Py37-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Horovod-Pytorch-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-orca-horovod-pytorch-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-python-horovod-pytorch-py37-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-Horovod-Pytorch-Py37-Spark3.json
        type: job
        job-name: Orca-Python-Horovod-Pytorch-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Python-Rayonspark-Tf2-Py37:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Python-Rayonspark-Tf2-Py37' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action 
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-rayonspark-tf2-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-rayonspark-tf2-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Python-Rayonspark-Tf2-Py37.json
        type: job
        job-name: Orca-Python-Rayonspark-Tf2-Py37
        runner-hosted-on: 'Shanghai'

  Orca-Jep-Python-Py37-Spark2:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Jep-Python-Py37-Spark2' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/orca/setup-env/setup-jep-exampletest-py37
    - name: Run Test
      uses: ./.github/actions/orca/orca-jep-python-py37-spark2-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Jep-Python-Py37-Spark2.json
        type: job
        job-name: Orca-Jep-Python-Py37-Spark2
        runner-hosted-on: 'Shanghai'
      
  Dllib-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Dllib-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/dllib-scala-ut-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Dllib-Scala-UT.json
        type: job
        job-name: Dllib-Scala-UT
        runner-hosted-on: 'Shanghai'
      
  Friesian-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, ubuntu-20.04-lts, CLX, AVX512, Ettenmoors ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/friesian-scala-ut-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Scala-UT.json
        type: job
        job-name: Friesian-Scala-UT
        runner-hosted-on: 'Shanghai'
      
  PPML-Scala-UT:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Scala-UT' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/ppml-scala-ut-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-Scala-UT.json
        type: job
        job-name: PPML-Scala-UT
        runner-hosted-on: 'Shanghai'

  PPML-Python-UT-Spark3:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Python-UT-Spark3' || github.event.inputs.artifact == 'all' }} 
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/ppml/setup-env/setup-ppml-python-ut-spark3
    - name: Run Test
      uses: ./.github/actions/ppml/ppml-python-ut-spark3-action/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-Python-UT-Spark3.json
        type: job
        job-name: PPML-Python-UT-Spark3
        runner-hosted-on: 'Shanghai'

  Orca-Ray-Ctx-Example:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'Orca-Ray-Ctx-Example' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Gondolin-resources, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run test
      uses: ./.github/actions/orca-ray-ctx-example-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Orca-Ray-Ctx-Example.json
        type: job
        job-name: Orca-Ray-Ctx-Example
        runner-hosted-on: 'Shanghai'
        
        
  PPML-Spark-PySpark-Local-Sql-UT-On-Gramine:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Spark-PySpark-Local-Sql-UT-On-Gramine' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, SGX, Wilwarin]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: set env
      env:
        DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-big-data-ml-python-gramine'
        DEFAULT_TAG: 'latest'
      run: |
        echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
        echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
    - name: Run test
      uses: ./.github/actions/ppml/ppml-spark-pyspark-sql-ut-on-gramine-action
      with:
        image: ${{env.IMAGE}}
        image-tag: ${{env.TAG}}
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-Spark-PySpark-Local-Sql-UT-On-Gramine.json
        type: job
        job-name: PPML-Spark-PySpark-Local-Sql-UT-On-Gramine
        runner-hosted-on: 'Shanghai'

  PPML-Occlum-ExampleTests:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-Occlum-ExampleTests' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Wilwarin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Run Test
      uses: ./.github/actions/ppml-occlum-exampletests-action
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-Occlum-ExampleTests.json
        type: job
        job-name: PPML-Occlum-ExampleTests
        runner-hosted-on: 'Shanghai'
        
  PPML-spark-Local-Example-Tests-on-Gramine:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'PPML-spark-Local-Example-Tests-on-Gramine' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, SGX, Wilwarin]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: set env
      env:
        DEFAULT_IMAGE: '10.239.45.10/arda/intelanalytics/bigdl-ppml-trusted-big-data-ml-python-gramine'
        DEFAULT_TAG: 'latest'
      run: |
        echo "TAG=${{ github.event.inputs.tag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
        echo "IMAGE=${{ github.event.inputs.image || env.DEFAULT_IMAGE }}" >> $GITHUB_ENV
    - name: Run test
      uses: ./.github/actions/ppml-spark-local-example-tests-on-gramine-action
      with:
        image: ${{env.IMAGE}}
        image-tag: ${{env.TAG}}
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: PPML-spark-Local-Example-Tests-on-Gramine.json
        type: job
        job-name: PPML-spark-Local-Example-Tests-on-Gramine
        runner-hosted-on: 'Shanghai'

  Friesian-Python-Py37-Spark3:
    #if: ${{ github.event.schedule || github.event.inputs.artifact == 'Friesian-Python-Py37-Spark3' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Gondolin, ubuntu-20.04-lts]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK8
      uses: ./.github/actions/jdk-setup-action
    - name: Set up maven
      uses: ./.github/actions/maven-setup-action
    - name: Setup env
      uses: ./.github/actions/friesian/setup-env/setup-friesian-python-py37-spark3
    - name: Run Test
      uses: ./.github/actions/friesian/friesian-python-py37-spark3/nightly-test
    - name: Remove Env
      if: ${{ always() }}
      uses: ./.github/actions/remove-env
    - name: Create Job Badge
      uses: ./.github/actions/create-job-status-badge
      if: ${{ always() }}
      with:
        secret: ${{ secrets.GIST_SECRET}}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: Friesian-Python-Py37-Spark3.json
        type: job
        job-name: Friesian-Python-Py37-Spark3
        runner-hosted-on: 'Shanghai'

  # please put your test before the create-workflow-badge to make sure the badge can be displayed on the github page.
  create-workflow-badge:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: create workflow badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: ${{env.GIST_ID}}
        file-name: nightly-test.json
        type: workflow
  


