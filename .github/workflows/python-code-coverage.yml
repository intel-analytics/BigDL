name: Python UT code coverage

# Cancel previous runs in the PR when you push new commits
# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
#   cancel-in-progress: true

on:

  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  

  Chronos:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]

    steps:
      - uses: actions/checkout@v3
      # - name: Setup env
      #   uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
      - name: Run test
        run: |
          if [ -d "/opt/conda/envs/coverage-env37" ];then
            rm -rf /opt/conda/envs/coverage-env37
          fi
          conda create -n coverage-env37 python=3.7 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate coverage-env37
          
          pip install pytest
          pip install coverage
          pip install --pre --upgrade bigdl-chronos[all]
          pip install --pre --upgrade bigdl-orca
          
          cd python/chronos
          coverage run -m pytest -v test/bigdl/chronos
          coverage report -i
          
          source deactivate
          conda remove -n coverage-env37 -y --all
          
          
          
  Orca:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup env
        uses: ./.github/actions/orca/setup-env/setup-orca-python-py38-basic
      - name: Run test
        run: |
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-orca-spark3
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} torch==1.7.1
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} tensorflow==2.9.0
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} grpcio==1.43.0
          pip install -i https://pypi.org/simple --pre --upgrade bigdl-orca-spark3[ray]
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} torchvision==0.8.2
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} torchmetrics==0.10.0
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} pyarrow==4.0.1
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} mmcv==1.7.1
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} opencv-python-headless
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} pandas==1.1.5
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} scikit-learn==0.22.2.post1
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} xgboost_ray==0.1.8
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} tabulate==0.8.7
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} scikit-optimize==0.8.1
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} torch==1.7.1
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} torchvision==0.8.2
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} torchmetrics==0.10.0
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} tensorflow==1.15.0
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} tensorflow-gan==2.0.0
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} tensorflow-probability==0.7.0
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} tensorflow-datasets==3.2.0
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} pyarrow==4.0.1
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} pandas==1.1.5
          pip install -i ${GONDOLIN_PIP_MIRROR} --trusted-host ${GONDOLIN_TRUSTED_HOST} h5py==2.10.0
          pip install pytest coverage
          cd python/orca
          coverage run -m pytest -v test/bigdl/orca
          coverage report -i
