name: Chronos NB Python Spark2.4 py37

# Controls when the action will run. 
on:
  schedule:
    - cron: '30 15 * * *' # GMT time, 15:30 GMT == 23:30 China
  pull_request:
    branches: [ main ]
    paths:
      - '.github/workflows/chronos-nb-python-2.4-py37.yml'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  chronos-NB-pytorch-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch) python 3.7
        shell: bash
        run: |
          if conda info --env | grep "chronos-nb-env-py37"; then
            source deactivate
            conda remove -n chronos-nb-env-py37 -y --all
          fi
          conda create -n chronos-nb-env-py37 -y python==3.7.10 setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env-py37
          pip install pytest==5.4.1
          apt-get update
          apt-get install patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos[pytorch]
          bash python/chronos/dev/test/run-installation-options.sh "torch and not inference and not automl and not distributed and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env-py37 -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

  chronos-NB-pytorch-inference-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch,inference) python 3.7
        shell: bash
        run: |
          if conda info --env | grep "chronos-nb-env-py37"; then
            source deactivate
            conda remove -n chronos-nb-env-py37 -y --all
          fi
          conda create -n chronos-nb-env-py37 -y python==3.7.10 setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env-py37
          pip install pytest==5.4.1
          apt-get update
          apt-get install patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos[pytorch,inference]
          bash python/chronos/dev/test/run-installation-options.sh "torch and not automl and not distributed and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env-py37 -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

  chronos-NB-pytorch-inference-automl-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch,inference,automl) python 3.7
        shell: bash
        run: |
          if conda info --env | grep "chronos-nb-env-py37"; then
            source deactivate
            conda remove -n chronos-nb-env-py37 -y --all
          fi
          conda create -n chronos-nb-env-py37 -y python==3.7.10 setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env-py37
          pip install pytest==5.4.1
          apt-get update
          apt-get install patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos[pytorch,inference,automl]
          pip install SQLAlchemy==1.4.27
          bash python/chronos/dev/test/run-installation-options.sh "torch and not distributed and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env-py37 -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

  chronos-NB-pytorch-inference-automl-distributed-test:
    runs-on: [ self-hosted, Gondolin, ubuntu-20.04-lts ]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: ./.github/actions/jdk-setup-action
      - name: Set up Maven
        uses: ./.github/actions/maven-setup-action

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Chronos NB (pytorch,inference,automl,distributed) python 3.7
        shell: bash
        run: |
          if conda info --env | grep "chronos-nb-env-py37"; then
            source deactivate
            conda remove -n chronos-nb-env-py37 -y --all
          fi
          conda create -n chronos-nb-env-py37 -y python==3.7.10 setuptools==58.0.4 -c ${GONDOLIN_CONDA_CHANNEL} --override-channels
          source activate chronos-nb-env-py37
          pip install pytest==5.4.1
          apt-get update
          apt-get install patchelf
          pip uninstall -y bigdl-friesian bigdl-friesian-spark3 bigdl-dllib bigdl-dllib-spark3 bigdl-orca pyspark bigdl-orca-spark3 bigdl-chronos bigdl-chronos-spark3 bigdl-nano bigdl-friesian bigdl-friesian-spark3
          pip install -i https://pypi.python.org/simple --pre --upgrade bigdl-chronos[pytorch,inference,automl,distributed]
          export SPARK_LOCAL_HOSTNAME=localhost
          export KERAS_BACKEND=tensorflow
          bash python/chronos/dev/test/run-installation-options.sh "torch and not automl and not diff_set_all"
          source deactivate
          conda remove -n chronos-nb-env-py37 -y --all
        env:
          BIGDL_ROOT: ${{ github.workspace }}
          ANALYTICS_ZOO_ROOT: ${{ github.workspace }}
