name: Nightly Build Docker Publish BigDL/BigDL-K8S

on:
  #release:
  #  types: [created]
  # schedule:
  #   - cron: '0 15 * * *'
  # Allows you to run this workflow manually from the Actions tab
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  
jobs:
  deploy-docker:

    runs-on: [self-hosted, Shire]
    permissions:
      contents: read
      packages: write

    steps:
    - name: debug
      run: |
        echo $DOCKERHUB_USERNAME && echo $DOCKERHUB_PASSWORD
        ls
    - name: docker login
      run: |
        docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
    - name: docker deploy
      run: |
        export IMAGE=intelanalytics/bigdl-k8s
        cd docker/bigdl-k8s
        echo "########################################"
        echo "################# bigdl-k8s 3.1.2 #######"
        echo "########################################"
        docker build \
        --build-arg http_proxy=${HTTP_PROXY} \
        --build-arg https_proxy=${HTTPS_PROXY} \
        --build-arg SPARK_VERSION=3.1.2 \
        --build-arg JDK_VERSION=8u192 \
        --build-arg JDK_URL=${JDK_URL} \
        --build-arg no_proxy=${NO_PROXY} \
        --rm --no-cache -t ${IMAGE}-spark-3.1.2:${TAG} .
        docker tag ${IMAGE}-spark-3.1.2:${TAG} ${IMAGE}-spark-3.1.2:latest
        docker push ${IMAGE}-spark-3.1.2:latest
        docker tag ${IMAGE}-spark-3.1.2:${TAG} 10.239.45.10/arda/${IMAGE}-spark-3.1.2:${TAG}
        docker push 10.239.45.10/arda/${IMAGE}-spark-3.1.2:${TAG}
        docker rmi -f ${IMAGE}-spark-3.1.2:${TAG}
        echo "########################################"
        echo "################# bigdl-k8s 3.1.2 tf2 #######"
        echo "########################################"
        docker build \
        --build-arg http_proxy=${HTTP_PROXY} \
        --build-arg https_proxy=${HTTPS_PROXY} \
        --build-arg SPARK_VERSION=3.1.2 \
        --build-arg PYTHON_ENV=tf2 \
        --build-arg JDK_VERSION=8u192 \
        --build-arg JDK_URL=${JDK_URL} \
        --build-arg no_proxy=${NO_PROXY} \
        --rm --no-cache -t ${IMAGE}-spark-3.1.2:${TAG}-tf2 .
        docker tag ${IMAGE}-spark-3.1.2:${TAG}-tf2 ${IMAGE}-spark-3.1.2:latest-tf2
        docker push ${IMAGE}-spark-3.1.2:latest-tf2
        docker tag ${IMAGE}-spark-3.1.2:${TAG}-tf2 10.239.45.10/arda/${IMAGE}-spark-3.1.2:${TAG}-tf2
        docker push 10.239.45.10/arda/${IMAGE}-spark-3.1.2:${TAG}-tf2
        docker rmi -f ${IMAGE}-spark-3.1.2:${TAG}-tf2
