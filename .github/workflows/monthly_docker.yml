name: Monthly-docker Test

on:
  pull_request:
     branchs: [ main ]
  schedule:
    - cron: '0 4 * * 0' # GMT time, 4:00 GMT == 12:00 China Every Sunday
  workflow_dispatch:
    inputs:
      artifact:
        description: 'select which job to run("all" will make all jobs run)'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - BigDL-k8s
        - BigDL
#      image:
#        description: 'docker image name'
#        required: true
#        default: 'intelanalytics/bigdl'
#        type: string
      tag:
        description: 'docker image tag'
        required: true
        default: 'latest'
        type: string

env:
  GIST_ID: 48dbd87983219d4fe264adfea701815a

permissions:
  contents: read
  packages: write

jobs:
  
  BigDL-k8s:
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'BigDL-k8s' || github.event.inputs.artifact == 'all' }}
    runs-on: [self-hosted, Shire]
    steps:
    - uses: actions/checkout@v3
    - name: set env
      env:
        DEFAULT_TAG: 'latest'
      run: |
        echo "TAG=${{ github.event.inputs.bigdlTag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
    - name: docker login
      run: |
        docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
    - name: docker deploy bigdl
      run: |
        cd docker/bigdl-k8s
        export IMAGE=intelanalytics/bigdl-k8s
        echo "########################################"
        echo "################# bigdl-k8s 3.1.3 #######"
        echo "########################################"
        docker build \
        --build-arg http_proxy=${HTTP_PROXY} \
        --build-arg https_proxy=${HTTPS_PROXY} \
        --build-arg SPARK_VERSION=3.1.3 \
        --build-arg JDK_VERSION=8u192 \
        --build-arg JDK_URL=${JDK_URL} \
        --build-arg no_proxy=${NO_PROXY} \
        --rm --no-cache -t ${IMAGE}-spark-3.1.3:${TAG} .
        docker push ${IMAGE}-spark-3.1.3:${TAG}
        docker tag ${IMAGE}-spark-3.1.3:${TAG} ${IMAGE}:${TAG}
        docker push ${IMAGE}:${TAG}
        docker tag ${IMAGE}:${TAG} 10.239.45.10/arda/${IMAGE}-spark-3.1.3:${TAG}
        docker push 10.239.45.10/arda/${IMAGE}-spark-3.1.3:${TAG}
        docker rmi -f ${IMAGE}-spark-3.1.3:${TAG}

  docker-build-bigdl:
    needs: scala-build
    if: ${{ github.event.schedule || github.event.inputs.artifact == 'docker-bigdl-build' || github.event.inputs.artifact == 'all' }} 
    runs-on: [self-hosted, Shire]

    steps:
    - uses: actions/checkout@v3
    - name: set env
      env:
        DEFAULT_TAG: 'latest'
      run: |
        echo "TAG=${{ github.event.inputs.bigdlTag || env.DEFAULT_TAG }}" >> $GITHUB_ENV
    - name: docker login
      run: |
        docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
    - name: docker deploy bigdl
      run: |
        export IMAGE=intelanalytics/bigdl
        cd docker/bigdl
        echo "########################################"
        echo "################# bigdl 3.1.3 #######"
        echo "########################################"
        docker build \
          --build-arg http_proxy=${HTTP_PROXY} \
          --build-arg https_proxy=${HTTPS_PROXY} \
          --build-arg SPARK_VERSION=3.1.3 \
          --build-arg JDK_VERSION=8u192 \
          --build-arg JDK_URL=${JDK_URL} \
          --build-arg no_proxy=${NO_PROXY} \
          --rm --no-cache -t $IMAGE-spark-3.1.3:${TAG} .
        docker push ${IMAGE}-spark-3.1.3:${TAG}
        docker tag ${IMAGE}-spark-3.1.3:${TAG} 10.239.45.10/arda/${IMAGE}-spark-3.1.3:${TAG}
        docker push 10.239.45.10/arda/${IMAGE}-spark-3.1.3:${TAG}
        docker rmi -f ${IMAGE}-spark-3.1.3:${TAG} 10.239.45.10/arda/${IMAGE}-spark-3.1.3:${TAG}

    - name: Create Job Badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: ${{env.GIST_ID}}
        is-self-hosted-runner: true
        file-name: nb-python-sourceforge-build.json
        type: job
        job-name: python-build-sourceforge
        runner-hosted-on: 'America'

  create-workflow-badge:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: create workflow badge
      if: ${{ always() }}
      uses: ./.github/actions/create-job-status-badge
      with:
        secret: ${{ secrets.GIST_SECRET }}
        gist-id: ${{env.GIST_ID}}
        file-name: nightly-build.json
        type: workflow

