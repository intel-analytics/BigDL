name: Nightly Build UT Scala Friesian

on:
  #pull_request:
  #branches: [ "main" ]
  schedule:
    - cron: "0 15 * * *"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: [self-hosted, ubuntu-20.04, CLX, AVX512, Ettenmoors, redis, docker]
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 8
        uses: actions/setup-java@v3
        with:
          java-version: "8"
          distribution: "temurin"
          #server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.4
        with:
          maven-version: 3.8.2

      - name: Set up Maven Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          sonatypeSnapshots: true
          apacheSnapshots: true
          servers: |
            [{
              "id": "central",
              "configuration": {
                "httpConfiguration": {
                  "all": {
                    "connectionTimeout": "3600000",
                    "readTimeout": "3600000"
                    }
                  }
                }
            }]
          mirrors: '[{"id": "ardaNexus", "name": "ardaNexus", "mirrorOf": "*", "url": "${NEXUS_URL}" }]'

      - name: Set up redis
        run: |
          curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list
          export http_proxy="http://child-prc.intel.com:913/"
          export https_proxy="http://child-prc.intel.com:913/"
          apt-get update
          apt-get install -y redis redis-tools
          redis-server --daemonize yes
          redis-cli ping

      - name: Prepare data
        run: |
          mkdir /tmp/friesian-unittest
          cd /tmp/friesian-unittest
          wget http://10.239.45.10:8081/repository/raw/analytics-zoo-data/friesian-serving-upload.tar.gz 
          tar -zxf friesian-serving-upload.tar.gz

      - name: Run tests
        run: |
          export SPARK_LOCAL_HOSTNAME=localhost
          export KERAS_BACKEND=tensorflow
          cd scala
          mvn "-DwildcardSuites=com.intel.analytics.bigdl.friesian" "-Dtest=com.intel.analytics.bigdl.friesian" test -P spark_2.x -Dspark.version=2.4.6 "-Dspark.master=local[*]" -U
