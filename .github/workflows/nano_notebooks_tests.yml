name: Nano Unit Tests for Notebooks

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths:
      - 'python/nano/**'
      - '.github/workflows/nano_notebooks_tests.yml'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  nano-notebooks-pytorch-test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-20.04"]
        python-version: ["3.7"]
        pytorch-version: [
          "torch==1.9.0+cpu torchvision==0.10.0+cpu torch_ipex==1.9.0",
          ""
        ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools==58.0.4
          python -m pip install --upgrade wheel

      - name: Run cifar10 notebooks PyTorch unit tests
        shell: bash
        run: |
            $CONDA/bin/conda create -n notebooks-trainer-pytorch -y python==3.7.10 setuptools=58.0.4
            source $CONDA/bin/activate notebooks-trainer-pytorch
            $CONDA/bin/conda info
            bash python/nano/dev/build_and_install.sh linux default false pytorch
            source bigdl-nano-init
            pip install -r python/nano/notebooks/pytorch/cifar10/requirements.txt
            bash python/nano/notebooks/pytorch/cifar10/run-nano-notebooks-pytorch-cifar10-tests.sh
            source $CONDA/bin/deactivate
            $CONDA/bin/conda remove -n notebooks-pytorch --all
        env:
            ANALYTICS_ZOO_ROOT: ${{ github.workspace }}

      - name: Run tutorial notebooks Pytorch unit tests
        shell: bash
        run: |
            $CONDA/bin/conda create -n notebooks-tutorial-pytorch -y python==3.7.10 setuptools=58.0.4
            source $CONDA/bin/activate notebooks-tutorial-pytorch
            $CONDA/bin/conda info
            bash python/nano/dev/build_and_install.sh linux default false pytorch
            source bigdl-nano-init
            if [ ! -z "${{matrix.pytorch-version}}" ]; then
              requirements=(${{matrix.pytorch-version}})
              pip install ${requirements[0]} ${requirements[1]} -f https://download.pytorch.org/whl/torch_stable.html
              pip install ${requirements[2]} -f https://software.intel.com/ipex-whl-stable
            fi
            pip install pytest nbmake
            pip install neural-compressor==1.11
            pip install onnx onnxruntime onnxruntime-extensions
            bash python/nano/notebooks/pytorch/tutorial/run-nano-notebooks-pytorch-tutorial-tests.sh
            source $CONDA/bin/deactivate
            $CONDA/bin/conda remove -n notebooks-pytorch --all

      - name: Run tutorial notebooks Pytorch unit tests(OpenVINO)
        shell: bash
        run: |
            $CONDA/bin/conda create -n notebooks-tutorial-pytorch -y python==3.7.10 setuptools=58.0.4
            source $CONDA/bin/activate notebooks-tutorial-pytorch
            $CONDA/bin/conda info
            bash python/nano/dev/build_and_install.sh linux default false pytorch
            source bigdl-nano-init
            if [ ! -z "${{matrix.pytorch-version}}" ]; then
              requirements=(${{matrix.pytorch-version}})
              pip install ${requirements[0]} ${requirements[1]} -f https://download.pytorch.org/whl/torch_stable.html
              pip install ${requirements[2]} -f https://software.intel.com/ipex-whl-stable
            fi
            pip install pytest nbmake
            pip install ipykernel==5.5.6
            pip install openvino-dev
            bash python/nano/notebooks/pytorch/tutorial/run-nano-notebooks-pytorch-tutorial-openvino-tests.sh
            source $CONDA/bin/deactivate
            $CONDA/bin/conda remove -n --all
