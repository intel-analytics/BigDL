# NFS PersistentVolume used by mysql
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-nfs-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: nfs
  nfs:
    path: $nfsPath
    server: $nfsServerIp
---
# keywhiz Service exposed to bkeywhiz frontend
apiVersion: v1
kind: Service
metadata:
  name: keywhiz-service
  namespace: bkeywhiz
  labels:
    app: keywhiz
spec:
  clusterIP: None
  ports:
    - name: keywhiz-port
      port: 4444
      targetPort: 4444
  selector:
    app: keywhiz
---
# keywhiz StatefuleSet: encrypted secret storage and secret engine
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keywhiz
  namespace: bkeywhiz
spec:
  selector:
    matchLabels:
      app: keywhiz
  serviceName: "keywhiz"
  replicas: 1
  template:
    metadata:
      labels:
        app: keywhiz
    spec:
      containers:
      - name: mysql
        image: $mysqlImage
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persitent-storage
        env:
        - name: MYSQL_ALLOW_EMPTY_PASSWORD
          value: "true"
        - name: MYSQL_DATABASE
          value: "keywhizdb_development"
      - name: keywhiz-server
        image: $keywhizServerImage
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - "bash /usr/src/app/entry.sh migrate; bash /usr/src/app/entry.sh server"
  volumeClaimTemplates:
      - metadata:
          name: mysql-persitent-storage
        spec:
          accessModes: [ "ReadWriteOnce" ]
          storageClassName: "nfs"
          resources:
            requests:
              storage: 10Gi
---
# bkeywhiz frontend Service exposed to bkeywhiz client
apiVersion: v1
kind: Service
metadata:
  name: bkeywhiz-frontend-service
  namespace: bkeywhiz
  labels:
    app: bkeywhiz-frontend
spec:
  type: LoadBalancer
  ports:
    - name: bkeywhiz-frontend-port
      port: 9876
      targetPort: 9876
      # nodeport:xxxx if internal port is not targetport
  selector:
    app: bkeywhiz-frontend
  sessionAffinity: ClientIP
  externalIPs:
  - $kmsIP
---
# bkeywhiz frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bkeywhiz-frontend
  namespace: bkeywhiz
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bkeywhiz-frontend
  template:
    metadata:
      labels:
        app: bkeywhiz-frontend
    spec:
      containers:
      - name: bkeywhiz-frontend
        image: $bkeywhizFrontendImage
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - "bash /opt/start-https-frontend.sh"
