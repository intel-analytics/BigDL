/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_analytics_bigdl_mkl_MklDnnFloat */

#ifndef _Included_com_intel_analytics_bigdl_mkl_MklDnnFloat
#define _Included_com_intel_analytics_bigdl_mkl_MklDnnFloat
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    layoutCreate
 * Signature: (I[J[J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_layoutCreate
  (JNIEnv *, jclass, jint, jlongArray, jlongArray);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    layoutCreateFromPrimitive
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_layoutCreateFromPrimitive
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    layoutGetMemorySize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_layoutGetMemorySize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    layoutCompare
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_layoutCompare
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    deletePrimitive
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_deletePrimitive
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    allocateBuffer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_allocateBuffer
  (JNIEnv *, jclass);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    releaseBuffer
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_releaseBuffer
  (JNIEnv *, jclass);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    conversionCreate
 * Signature: (JJ)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_conversionCreate
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    conversionExecuteToUsr
 * Signature: ([FI[FJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_conversionExecuteToUsr
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    conversionExecuteToMkl
 * Signature: ([FI[FJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_conversionExecuteToMkl
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionCreateForward
 * Signature: (IJJ[J[J[J[J[II)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionCreateForward
  (JNIEnv *, jclass, jint, jlong, jlong, jlongArray, jlongArray, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionCreateBackwardData
 * Signature: (IJJ[J[J[J[J[II)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionCreateBackwardData
  (JNIEnv *, jclass, jint, jlong, jlong, jlongArray, jlongArray, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionCreateBackwardKernel
 * Signature: (IJJ[J[J[J[J[II)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionCreateBackwardKernel
  (JNIEnv *, jclass, jint, jlong, jlong, jlongArray, jlongArray, jlongArray, jlongArray, jintArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionCreateBackwardBias
 * Signature: (IJJ[J)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionCreateBackwardBias
  (JNIEnv *, jclass, jint, jlong, jlong, jlongArray);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionForwardExecute
 * Signature: ([F[F[F[FJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionForwardExecute
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jfloatArray, jfloatArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionBackwardDataExecute
 * Signature: ([F[F[FJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionBackwardDataExecute
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jfloatArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionBackwardKernelExecute
 * Signature: ([F[F[FJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionBackwardKernelExecute
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jfloatArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MklDnnFloat
 * Method:    convolutionBackwardBiasExecute
 * Signature: ([F[FJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MklDnnFloat_convolutionBackwardBiasExecute
  (JNIEnv *, jclass, jfloatArray, jfloatArray, jlong);

#ifdef __cplusplus
}
#endif
#endif
