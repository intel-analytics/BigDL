/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_intel_analytics_bigdl_mkl_MKL */

#ifndef _Included_com_intel_analytics_bigdl_mkl_MKL
#define _Included_com_intel_analytics_bigdl_mkl_MKL
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    setNumThreads
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_setNumThreads
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsAdd
 * Signature: (I[FI[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsAdd
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdAdd
 * Signature: (I[DI[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdAdd
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsSub
 * Signature: (I[FI[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsSub
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdSub
 * Signature: (I[DI[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdSub
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsMul
 * Signature: (I[FI[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsMul
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdMul
 * Signature: (I[DI[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdMul
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsDiv
 * Signature: (I[FI[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsDiv
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdDiv
 * Signature: (I[DI[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdDiv
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsPowx
 * Signature: (I[FIF[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsPowx
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloat, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdPowx
 * Signature: (I[DID[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdPowx
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdouble, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsLn
 * Signature: (I[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsLn
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdLn
 * Signature: (I[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdLn
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsExp
 * Signature: (I[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsExp
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdExp
 * Signature: (I[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdExp
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsSqrt
 * Signature: (I[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsSqrt
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdSqrt
 * Signature: (I[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdSqrt
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsLog1p
 * Signature: (I[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsLog1p
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdLog1p
 * Signature: (I[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdLog1p
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsAbs
 * Signature: (I[FI[FI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsAbs
  (JNIEnv *, jclass, jint, jfloatArray, jint, jfloatArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdAbs
 * Signature: (I[DI[DI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdAbs
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jdoubleArray, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsgemm
 * Signature: (CCIIIF[FII[FIIF[FII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsgemm
  (JNIEnv *, jclass, jchar, jchar, jint, jint, jint, jfloat, jfloatArray, jint, jint, jfloatArray, jint, jint, jfloat, jfloatArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdgemm
 * Signature: (CCIIID[DII[DIID[DII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdgemm
  (JNIEnv *, jclass, jchar, jchar, jint, jint, jint, jdouble, jdoubleArray, jint, jint, jdoubleArray, jint, jint, jdouble, jdoubleArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsgemv
 * Signature: (CIIF[FII[FIIF[FII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsgemv
  (JNIEnv *, jclass, jchar, jint, jint, jfloat, jfloatArray, jint, jint, jfloatArray, jint, jint, jfloat, jfloatArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdgemv
 * Signature: (CIID[DII[DIID[DII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdgemv
  (JNIEnv *, jclass, jchar, jint, jint, jdouble, jdoubleArray, jint, jint, jdoubleArray, jint, jint, jdouble, jdoubleArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsaxpy
 * Signature: (IF[FII[FII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsaxpy
  (JNIEnv *, jclass, jint, jfloat, jfloatArray, jint, jint, jfloatArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdaxpy
 * Signature: (ID[DII[DII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdaxpy
  (JNIEnv *, jclass, jint, jdouble, jdoubleArray, jint, jint, jdoubleArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsdot
 * Signature: (I[FII[FII)F
 */
JNIEXPORT jfloat JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsdot
  (JNIEnv *, jclass, jint, jfloatArray, jint, jint, jfloatArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vddot
 * Signature: (I[DII[DII)D
 */
JNIEXPORT jdouble JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vddot
  (JNIEnv *, jclass, jint, jdoubleArray, jint, jint, jdoubleArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsger
 * Signature: (IIF[FII[FII[FII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsger
  (JNIEnv *, jclass, jint, jint, jfloat, jfloatArray, jint, jint, jfloatArray, jint, jint, jfloatArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdger
 * Signature: (IID[DII[DII[DII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdger
  (JNIEnv *, jclass, jint, jint, jdouble, jdoubleArray, jint, jint, jdoubleArray, jint, jint, jdoubleArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vsscal
 * Signature: (IF[FII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vsscal
  (JNIEnv *, jclass, jint, jfloat, jfloatArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    vdscal
 * Signature: (ID[DII)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_vdscal
  (JNIEnv *, jclass, jint, jdouble, jdoubleArray, jint, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    getNumThreads
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_getNumThreads
  (JNIEnv *, jclass);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionInitFloat
 * Signature: (IIIIIIIIIIIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionInitFloat
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionForwardFloat
 * Signature: ([FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionForwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionBackwardDataFloat
 * Signature: ([FI[FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionBackwardDataFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionBackwardKernelFloat
 * Signature: ([FI[FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionBackwardKernelFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionBackwardBiasFloat
 * Signature: ([FI[FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionBackwardBiasFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionInitDouble
 * Signature: (IIIIIIIIIIIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionInitDouble
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionForwardDouble
 * Signature: ([DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionForwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionBackwardDataDouble
 * Signature: ([DI[DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionBackwardDataDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionBackwardKernelDouble
 * Signature: ([DI[DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionBackwardKernelDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConvolutionBackwardBiasDouble
 * Signature: ([DI[DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConvolutionBackwardBiasDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReLUInitFloat
 * Signature: (IIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReLUInitFloat
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReLUForwardFloat
 * Signature: ([FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReLUForwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReLUBackwardFloat
 * Signature: ([FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReLUBackwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReLUInitDouble
 * Signature: (IIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReLUInitDouble
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReLUForwardDouble
 * Signature: ([DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReLUForwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReLUBackwardDouble
 * Signature: ([DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReLUBackwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    PoolingInitFloat
 * Signature: (IIIIIIIIIIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_PoolingInitFloat
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    PoolingForwardFloat
 * Signature: ([FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_PoolingForwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    PoolingBackwardFloat
 * Signature: ([FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_PoolingBackwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    PoolingInitDouble
 * Signature: (IIIIIIIIIIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_PoolingInitDouble
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    PoolingForwardDouble
 * Signature: ([DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_PoolingForwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    PoolingBackwardDouble
 * Signature: ([DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_PoolingBackwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    BatchNormInitFloat
 * Signature: (IIIIFIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_BatchNormInitFloat
  (JNIEnv *, jclass, jint, jint, jint, jint, jfloat, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    BatchNormForwardFloat
 * Signature: ([FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_BatchNormForwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    BatchNormBackwardFloat
 * Signature: ([FI[FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_BatchNormBackwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    BatchNormInitDouble
 * Signature: (IIIIDIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_BatchNormInitDouble
  (JNIEnv *, jclass, jint, jint, jint, jint, jdouble, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    BatchNormForwardDouble
 * Signature: ([DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_BatchNormForwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    BatchNormBackwardDouble
 * Signature: ([DI[DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_BatchNormBackwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LRNInitFloat
 * Signature: (IIIIIFFFI)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LRNInitFloat
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jfloat, jfloat, jfloat, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LRNForwardFloat
 * Signature: ([FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LRNForwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LRNBackwardFloat
 * Signature: ([FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LRNBackwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LRNInitDouble
 * Signature: (IIIIIDDDI)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LRNInitDouble
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jdouble, jdouble, jdouble, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LRNForwardDouble
 * Signature: ([DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LRNForwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LRNBackwardDouble
 * Signature: ([DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LRNBackwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetPrevFloat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetPrevFloat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetPrevDouble
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetPrevDouble
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetConcatPrevFloat
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetConcatPrevFloat
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetConcatPrevDouble
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetConcatPrevDouble
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetConcatNextFloat
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetConcatNextFloat
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetConcatNextDouble
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetConcatNextDouble
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetSumNextFloat
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetSumNextFloat
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetSumNextDouble
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetSumNextDouble
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetNextFloat
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetNextFloat
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetNextDouble
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetNextDouble
  (JNIEnv *, jclass, jlong, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetIPrevFloat
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetIPrevFloat
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetIPrevDouble
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetIPrevDouble
  (JNIEnv *, jclass, jlong, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReleaseAllMemFloat
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReleaseAllMemFloat
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ReleaseAllMemDouble
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ReleaseAllMemDouble
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearInitFloat
 * Signature: (IIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearInitFloat
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearForwardFloat
 * Signature: ([FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearForwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearBackwardDataFloat
 * Signature: ([FI[FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearBackwardDataFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearBackwardKernelFloat
 * Signature: ([FI[FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearBackwardKernelFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearBackwardBiasFloat
 * Signature: ([FI[FI[FI[FI[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearBackwardBiasFloat
  (JNIEnv *, jclass, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearInitDouble
 * Signature: (IIIIILjava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearInitDouble
  (JNIEnv *, jclass, jint, jint, jint, jint, jint, jstring);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearForwardDouble
 * Signature: ([DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearForwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearBackwardDataDouble
 * Signature: ([DI[DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearBackwardDataDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearBackwardKernelDouble
 * Signature: ([DI[DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearBackwardKernelDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    LinearBackwardBiasDouble
 * Signature: ([DI[DI[DI[DI[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_LinearBackwardBiasDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConcatInitFloat
 * Signature: (II[I)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConcatInitFloat
  (JNIEnv *, jclass, jint, jint, jintArray);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConcatForwardFloat
 * Signature: ([[F[I[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConcatForwardFloat
  (JNIEnv *, jclass, jobjectArray, jintArray, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConcatBackwardFloat
 * Signature: ([[F[I[FIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConcatBackwardFloat
  (JNIEnv *, jclass, jobjectArray, jintArray, jfloatArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConcatInitDouble
 * Signature: (II[I)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConcatInitDouble
  (JNIEnv *, jclass, jint, jint, jintArray);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConcatForwardDouble
 * Signature: ([[D[I[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConcatForwardDouble
  (JNIEnv *, jclass, jobjectArray, jintArray, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    ConcatBackwardDouble
 * Signature: ([[D[I[DIJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_ConcatBackwardDouble
  (JNIEnv *, jclass, jobjectArray, jintArray, jdoubleArray, jint, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SumInitFloat
 * Signature: (II[I)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SumInitFloat
  (JNIEnv *, jclass, jint, jint, jintArray);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SumForwardFloat
 * Signature: ([FI[[F[IJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SumForwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jobjectArray, jintArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SumBackwardFloat
 * Signature: ([FI[[F[IJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SumBackwardFloat
  (JNIEnv *, jclass, jfloatArray, jint, jobjectArray, jintArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SumInitDouble
 * Signature: (II[I)J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SumInitDouble
  (JNIEnv *, jclass, jint, jint, jintArray);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SumForwardDouble
 * Signature: ([DI[[D[IJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SumForwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jobjectArray, jintArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SumBackwardDouble
 * Signature: ([DI[[D[IJ)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SumBackwardDouble
  (JNIEnv *, jclass, jdoubleArray, jint, jobjectArray, jintArray, jlong);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetUseNextFloat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetUseNextFloat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetUseNextDouble
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetUseNextDouble
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetUseOpenMpFloat
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetUseOpenMpFloat
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    SetUseOpenMpDouble
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_SetUseOpenMpDouble
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_intel_analytics_bigdl_mkl_MKL
 * Method:    getMklVersion
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_intel_analytics_bigdl_mkl_MKL_getMklVersion
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
