/*
 * Copyright 2016 The BigDL Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.intel.analytics.bigdl.nn

import com.intel.analytics.bigdl.models.maskrcnn.MaskRCNN
import com.intel.analytics.bigdl.tensor.Tensor
import com.intel.analytics.bigdl.utils.T
import org.scalatest.{FlatSpec, Matchers}

class MaskRCNNSpec extends FlatSpec with Matchers {

  "build roi" should "be ok" in {
    val resNetOutChannels = 100
    val backboneOutChannels = 32
    val mask = new MaskRCNN(resNetOutChannels, backboneOutChannels)
    val features2 = Tensor[Float](T(T(T(
      T( 8.3406e-03,  4.0101e-02,  3.1890e-02,  1.0938e-01,  9.4255e-02,
      8.4108e-02,  1.8215e-02,  4.7608e-02),
      T( 1.0889e-01,  1.1076e-01,  1.5496e-02,  1.4028e-01,  1.4548e-01,
        2.1740e-02,  1.8499e-01, -1.0130e-01),
      T( 1.6922e-01,  1.5878e-01,  1.5480e-01,  2.9618e-02,  1.9642e-01,
        9.2592e-02,  1.5139e-01,  7.7525e-02),
      T( 1.4661e-01,  3.0451e-01,  2.8113e-01,  1.9562e-01,  1.4983e-01,
        2.5450e-01,  1.2106e-01,  1.0238e-02),
      T( 7.2742e-03,  1.7775e-01,  2.6518e-02,  1.4295e-03,  1.6550e-02,
        6.7023e-02, -5.0989e-02, -1.0081e-01)),

      T(T( 7.2659e-02,  1.1742e-01,  2.7154e-01,  1.2431e-01,  2.3680e-01,
        1.3668e-01,  1.9500e-01,  6.6783e-02),
        T( 1.5237e-01,  2.5063e-01,  2.2679e-01,  3.9832e-01,  1.3021e-01,
          1.9100e-01,  5.2474e-02,  9.8610e-02),
        T( 2.7609e-01,  2.1878e-01,  1.8457e-01,  2.3996e-01,  3.0186e-01,
          2.6175e-01,  1.2750e-01,  5.8486e-02),
        T( 2.7302e-01,  3.1006e-01,  4.6426e-01,  4.8518e-01,  4.2234e-01,
          5.4980e-01,  2.2923e-01,  1.0627e-01),
        T( 2.5877e-01,  2.0782e-01,  1.6447e-01,  2.5948e-01,  1.9878e-01,
          1.4181e-01,  5.4477e-02,  5.4951e-03)),

      T(T( 3.2531e-01,  1.2918e-01,  1.5170e-01,  2.0384e-01,  1.9025e-01,
        2.0793e-01,  1.9598e-01,  3.0953e-02),
        T( 3.1791e-01,  1.5350e-01,  2.9183e-02,  1.6163e-01, -1.2819e-02,
          4.9905e-02,  1.6268e-01, -2.6510e-02),
        T( 2.6189e-01,  2.8471e-03, -1.3717e-01, -1.0427e-01,  6.6845e-02,
          -6.0962e-02,  1.0302e-01, -3.1376e-02),
        T( 3.9005e-01,  8.9704e-02,  1.8018e-01,  1.9233e-01,  6.1592e-02,
          7.7121e-02,  3.2495e-01, -8.3305e-02),
        T( 1.5814e-01, -4.6913e-02, -1.4703e-01, -1.6889e-01, -2.0441e-02,
          -1.7038e-01, -2.2183e-01, -3.2374e-01)),

      T(T( 3.8174e-01,  2.8705e-01,  2.4619e-01,  2.4487e-01,  2.4271e-01,
        2.6090e-01,  1.7165e-01, -3.3014e-02),
        T( 4.1369e-01,  2.1534e-01,  3.0294e-01,  2.0350e-01,  2.2858e-01,
          3.7452e-01,  3.1849e-01, -1.1624e-02),
        T( 3.8498e-01,  2.5895e-01,  2.2624e-01,  3.5805e-01,  1.9668e-01,
          8.1790e-02,  2.3420e-01, -1.1766e-01),
        T( 5.7457e-01,  2.8329e-01,  3.2549e-01,  1.6229e-01,  2.0172e-01,
          2.6262e-01,  3.7011e-01, -1.3892e-01),
        T( 5.0512e-01,  2.8750e-01,  2.8677e-01,  2.2901e-01,  1.8921e-01,
          2.8995e-01,  2.4308e-01,  1.7225e-02)),

      T(T(-1.0147e-01,  2.3671e-02, -1.4766e-02, -7.6224e-03,  5.8016e-02,
        2.9725e-02, -5.2769e-02, -1.6288e-02),
        T(-2.9173e-02,  4.5900e-03,  1.9372e-01,  1.0013e-01,  1.0542e-01,
          6.0481e-02, -8.9835e-03,  2.4339e-01),
        T(-7.0567e-02, -1.6528e-01,  3.9803e-01,  1.5797e-01,  1.0000e-01,
          1.1031e-01, -6.5234e-03,  4.5444e-01),
        T(-1.6996e-02,  1.2939e-01, -3.7188e-02,  5.3712e-02,  1.5695e-01,
          1.1216e-01,  1.4073e-01,  4.2515e-01),
        T( 2.1324e-01,  1.8336e-01,  3.1548e-01,  3.9474e-01,  3.5756e-01,
          2.9563e-01,  3.9919e-01,  4.6569e-01)),

      T(T(-3.1801e-01, -8.3282e-02, -1.1827e-01,  9.0202e-03, -8.7165e-02,
        -7.3407e-02,  8.3724e-02, -7.2313e-02),
        T(-4.6736e-01, -1.4396e-01, -9.5732e-02,  1.9506e-02, -7.1558e-02,
          -8.0265e-02,  6.0683e-02, -1.2918e-02),
        T(-3.7737e-01, -1.3836e-01, -1.5931e-02,  9.5337e-02, -1.5378e-02,
          -1.9501e-02, -7.1446e-03,  2.8150e-03),
        T(-3.7930e-01, -7.6963e-02,  1.7956e-01, -1.0582e-02,  9.9542e-02,
          2.4908e-02,  1.0558e-01,  4.7582e-02),
        T(-3.9472e-01, -1.2146e-01, -2.0270e-01, -1.5372e-01, -1.9409e-01,
          -2.3227e-01, -1.9665e-01,  1.5636e-01)),

      T(T(-1.9600e-01, -1.9139e-01, -2.9134e-01, -2.1189e-01, -2.0455e-01,
        -1.9328e-01, -1.2145e-01, -3.0263e-01),
        T(-1.6835e-02, -2.2947e-01, -2.3401e-01, -2.1790e-01, -3.4741e-01,
          -1.4305e-01, -1.9045e-01, -2.6292e-01),
        T(-1.0001e-01, -3.4281e-01, -5.5934e-02, -1.9051e-01, -1.7463e-01,
          -2.0513e-01, -2.4008e-01, -3.1591e-01),
        T( 1.6042e-02, -2.6417e-01, -8.2460e-02, -9.3525e-02, -2.4914e-01,
          -1.2539e-01, -4.1805e-02, -3.2745e-01),
        T( 1.3999e-01, -1.4288e-01, -5.1297e-02, -5.7471e-02,  4.3576e-02,
          -4.9463e-02, -5.0594e-02, -1.8736e-01)),

      T(T( 1.3240e-01, -1.9085e-01, -4.1239e-02, -1.3111e-01, -7.9550e-02,
        8.2189e-02, -3.6733e-04, -1.7862e-01),
        T( 1.3527e-01, -1.3302e-01, -4.2461e-03,  4.1908e-02,  1.4928e-01,
          2.1369e-01,  6.6504e-03,  3.9172e-02),
        T( 2.2004e-01,  1.6184e-02,  8.1703e-02,  1.3350e-01, -1.0925e-02,
          2.1129e-01, -2.7666e-02, -4.6167e-02),
        T( 1.5157e-01,  2.2297e-01,  2.0675e-01,  2.3933e-01,  3.4909e-01,
          3.0682e-01,  9.9414e-02, -2.3269e-01),
        T( 2.5074e-01,  2.7252e-01,  3.8594e-01,  2.6115e-01,  2.1175e-01,
          3.5279e-01,  2.1896e-01,  1.0827e-01)),

      T(T( 3.6961e-01,  2.3128e-01,  2.3644e-01,  2.7025e-01,  3.6834e-01,
        2.4747e-01,  3.5426e-01, -6.5901e-02),
        T( 4.7396e-01,  4.4971e-01,  5.3342e-01,  4.9751e-01,  6.0085e-01,
          5.5028e-01,  6.5944e-01,  1.0651e-01),
        T( 5.4689e-01,  5.2652e-01,  5.5343e-01,  7.2049e-01,  4.6330e-01,
          5.5893e-01,  7.7934e-01,  1.7120e-01),
        T( 4.9765e-01,  4.7923e-01,  5.4937e-01,  4.7327e-01,  5.5188e-01,
          4.2077e-01,  5.3277e-01,  1.8218e-01),
        T( 2.6601e-01,  3.4388e-01,  4.5502e-01,  4.3896e-01,  4.8530e-01,
          4.1448e-01,  3.7945e-01,  2.5865e-01)),

      T(T( 2.1097e-01,  1.7442e-01,  3.2142e-01,  1.1404e-01,  1.0514e-01,
        1.6141e-01,  2.5770e-01,  1.9350e-01),
        T( 2.1646e-01,  7.6036e-02,  1.6837e-01,  3.4392e-03,  1.2967e-01,
          1.0965e-01,  6.1179e-03, -8.5865e-03),
        T( 2.6712e-01,  1.4821e-01,  1.8537e-01,  2.8777e-01,  1.3654e-01,
          3.1300e-01,  2.2967e-01, -1.7692e-03),
        T( 5.5378e-01,  3.8374e-01,  2.7910e-01,  3.3403e-01,  4.3013e-01,
          3.6318e-01,  5.2612e-01,  1.8409e-01),
        T( 3.0718e-01,  2.0217e-01,  3.7203e-01,  4.0735e-01,  3.7653e-01,
          3.2652e-01,  4.8601e-01,  1.3296e-01)),

      T(T(-1.7275e-01, -5.7004e-01, -4.6371e-01, -3.4428e-01, -5.1546e-01,
        -5.1475e-01, -4.8883e-01, -2.0975e-01),
        T(-2.0755e-01, -8.5353e-01, -8.9491e-01, -8.5213e-01, -9.7628e-01,
          -9.9028e-01, -8.4668e-01, -6.3067e-01),
        T(-2.5192e-01, -8.3444e-01, -8.2071e-01, -7.7622e-01, -8.6520e-01,
          -8.7449e-01, -7.0823e-01, -6.6182e-01),
        T(-3.9951e-01, -6.1033e-01, -6.5695e-01, -5.7192e-01, -7.5766e-01,
          -7.1190e-01, -6.2170e-01, -5.0545e-01),
        T(-1.6060e-01, -2.5468e-01, -3.1577e-01, -3.3373e-01, -4.3982e-01,
          -4.1484e-01, -3.3511e-01, -1.9074e-01)),

      T(T(-1.4798e-02, -1.1601e-01, -2.4202e-01, -2.6266e-01, -1.7711e-01,
        -2.2838e-01, -8.1192e-03, -1.7998e-01),
        T(-2.0099e-01, -6.0272e-02, -1.3731e-01, -4.4092e-02, -1.2228e-01,
          -1.8103e-01, -1.1275e-01,  3.0201e-02),
        T(-2.8673e-01,  6.9473e-02, -1.7721e-02, -3.1173e-02,  2.2658e-02,
          8.9993e-03, -1.5707e-01,  1.7707e-01),
        T(-1.1252e-01, -4.9672e-02,  5.7859e-02,  3.9039e-02,  4.9705e-02,
          -4.9974e-02,  2.9058e-02,  5.7877e-02),
        T(-1.1265e-01,  1.2678e-01,  2.1801e-01,  2.0959e-01,  2.8916e-01,
          1.6620e-01,  1.8975e-02,  2.4828e-01)),

      T(T( 2.8064e-01,  4.2044e-01,  5.9076e-01,  3.4553e-01,  4.3521e-01,
        4.7290e-01,  4.3671e-01,  2.6766e-01),
        T( 1.9009e-01,  6.3686e-01,  6.2723e-01,  5.6367e-01,  7.6653e-01,
          5.4720e-01,  7.7316e-01,  3.1700e-01),
        T( 1.4858e-01,  7.7188e-01,  4.8108e-01,  5.9732e-01,  6.7763e-01,
          6.0082e-01,  6.6099e-01,  4.0005e-01),
        T( 1.5635e-01,  5.0421e-01,  4.4712e-01,  6.5971e-01,  6.7644e-01,
          5.4225e-01,  6.3289e-01,  2.0355e-01),
        T( 2.6244e-01,  3.8823e-01,  4.2068e-01,  4.3407e-01,  4.1220e-01,
          3.4148e-01,  4.4525e-01,  6.8212e-02)),

      T(T(-1.6579e-01, -2.3631e-02, -4.0753e-02, -1.9523e-01, -2.3766e-02,
        -8.3895e-02, -1.6103e-01, -8.9709e-02),
        T(-4.0499e-01, -2.5620e-01, -3.0400e-01, -3.5772e-01, -3.5543e-01,
          -3.8830e-01, -4.1964e-01, -1.2905e-01),
        T(-2.1110e-01, -2.2819e-01, -2.3592e-01, -1.7618e-01, -3.8746e-01,
          -2.7619e-01, -3.4274e-01, -1.1446e-01),
        T(-3.8999e-01, -2.3889e-01, -3.5723e-01, -2.3682e-01, -3.0890e-01,
          -2.7752e-01, -2.5611e-01, -1.0669e-01),
        T(-1.6546e-01,  1.2203e-01,  1.1248e-01,  7.3388e-02,  6.1118e-02,
          5.1803e-02,  1.4267e-01,  1.4106e-01)),

      T(T(-1.2936e-01,  1.8433e-01,  1.4469e-01,  1.6287e-01,  8.6169e-02,
        2.4815e-01,  1.8997e-01,  3.1039e-01),
        T( 1.5466e-01,  1.1156e-01,  3.6841e-01,  8.0892e-02,  3.9050e-01,
          2.8841e-01,  3.9298e-01,  1.3303e-01),
        T( 1.4387e-02,  3.3029e-01,  2.3005e-01,  3.8056e-01,  2.2896e-01,
          3.8081e-01,  3.8291e-01,  1.7434e-01),
        T( 1.4932e-01,  1.5667e-01,  2.7846e-01,  2.1921e-01,  2.9470e-01,
          2.6009e-01,  1.2145e-01,  1.2837e-01),
        T( 1.8749e-01,  1.8772e-01,  3.3571e-01,  2.8273e-01,  2.8763e-01,
          3.8961e-01,  3.2354e-01,  1.8974e-01)),

      T(T( 1.2770e-01,  2.7658e-01,  3.2215e-01,  2.6334e-01,  2.6834e-01,
        2.8410e-01,  2.4376e-01,  1.2541e-01),
        T( 1.2517e-02,  2.7463e-01,  3.4994e-01,  5.3994e-01,  3.9501e-01,
          3.3905e-01,  3.7647e-01,  3.4527e-01),
        T( 5.7748e-02, -4.5007e-02,  2.9297e-01,  1.8641e-01,  1.7477e-01,
          2.5735e-01,  2.1562e-01,  3.0092e-01),
        T(-2.6423e-04,  2.9722e-01,  1.2913e-01,  4.5365e-01,  1.9238e-01,
          2.6229e-01,  2.4789e-01,  2.6770e-01),
        T(-1.8137e-01,  9.3382e-03, -8.1579e-02, -7.5606e-02, -2.7519e-02,
          7.7010e-02, -7.7108e-02,  5.0515e-02)),

      T(T(-3.1730e-02,  3.2842e-02, -9.4899e-02, -2.1795e-01, -1.8077e-01,
        -8.7202e-02, -4.0173e-02, -1.8284e-01),
        T(-2.0924e-01, -3.7208e-01, -5.1577e-01, -4.1855e-01, -5.7478e-01,
          -4.9218e-01, -3.5424e-01, -3.9582e-01),
        T(-1.5292e-01, -4.7766e-01, -4.2839e-01, -4.3119e-01, -2.8643e-01,
          -5.1232e-01, -3.5556e-01, -2.1677e-01),
        T(-1.1903e-01, -4.1717e-01, -3.8413e-01, -3.8109e-01, -3.9313e-01,
          -3.3546e-01, -3.0722e-01, -2.6192e-01),
        T(-2.4241e-01, -2.7249e-01, -4.2787e-01, -2.6078e-01, -3.2135e-01,
          -3.7987e-01, -3.0364e-01, -1.5492e-01)),

      T(T(-1.4451e-01, -3.8624e-01, -2.8810e-01, -1.6705e-01, -4.2677e-01,
        -3.2702e-01, -3.5433e-01, -2.3164e-01),
        T(-6.9362e-02, -4.2882e-01, -5.0979e-01, -6.0114e-01, -6.2013e-01,
          -4.4174e-01, -4.2619e-01, -3.5714e-01),
        T(-2.1148e-01, -2.6130e-01, -4.7279e-01, -4.0626e-01, -6.0990e-01,
          -4.8702e-01, -3.7832e-01, -3.0877e-01),
        T(-8.4837e-02, -2.9806e-01, -4.6598e-01, -4.7483e-01, -3.5764e-01,
          -3.2991e-01, -3.2538e-01, -3.2716e-01),
        T( 8.7541e-02, -3.5135e-01, -3.5651e-01, -3.2555e-01, -4.0778e-01,
          -4.7859e-01, -3.3225e-01, -3.4429e-01)),

      T(T(-2.0715e-01, -2.3685e-01, -4.1677e-02, -1.1990e-01, -1.3417e-01,
        -5.0721e-02, -9.6812e-03,  5.4330e-02),
        T(-1.7639e-01, -1.0257e-01, -1.1878e-01, -1.2913e-01, -8.0792e-02,
          -8.3488e-02, -6.9900e-02,  2.2262e-01),
        T(-2.3543e-01, -8.9940e-02, -3.9608e-02, -1.2936e-01, -1.8611e-01,
          -2.1615e-01, -7.7079e-02,  2.1236e-01),
        T(-2.7819e-01, -2.1357e-02, -1.4523e-01, -2.4900e-01, -2.0002e-01,
          -1.1650e-01, -1.6384e-01,  7.3925e-02),
        T(-7.8930e-02,  8.9149e-02, -1.0701e-01, -1.7397e-01, -1.6746e-01,
          -1.2621e-01, -1.3692e-01, -1.3237e-01)),

      T(T( 1.6694e-01,  8.6731e-02,  2.8733e-01,  2.0588e-01,  1.9950e-01,
        2.7639e-01,  1.1918e-01,  2.2869e-01),
        T( 3.0315e-01,  7.1085e-01,  5.9061e-01,  5.2633e-01,  6.9083e-01,
          5.9078e-01,  5.7513e-01,  2.6320e-01),
        T( 3.7864e-01,  6.9171e-01,  6.4306e-01,  5.9653e-01,  5.9595e-01,
          6.4157e-01,  4.0057e-01,  3.9322e-01),
        T( 3.5865e-01,  6.0574e-01,  6.6705e-01,  6.1916e-01,  5.9356e-01,
          6.2965e-01,  4.4099e-01,  3.3547e-01),
        T(-6.4832e-02,  1.5258e-01, -6.9618e-02, -7.4596e-02,  1.7088e-02,
          -4.0136e-02, -1.1456e-01, -1.4081e-02)),

      T(T( 2.0624e-01,  3.7918e-01,  4.4482e-01,  3.2076e-01,  5.5724e-01,
        3.8454e-01,  5.0969e-01,  1.8469e-01),
        T( 2.5773e-01,  3.3640e-01,  4.5187e-01,  3.7314e-01,  5.1335e-01,
          4.4780e-01,  3.8948e-01,  3.7731e-01),
        T( 3.2109e-01,  4.4062e-01,  4.4110e-01,  3.4538e-01,  4.7073e-01,
          5.5657e-01,  4.7639e-01,  4.5442e-01),
        T( 3.2211e-01,  4.8124e-01,  5.3951e-01,  5.2281e-01,  7.2525e-01,
          5.9903e-01,  5.5031e-01,  5.0045e-01),
        T( 1.5974e-03, -1.4461e-01, -1.4437e-01, -2.2957e-01, -3.6463e-01,
          -1.9737e-01, -4.2980e-02, -1.3129e-01)),

      T(T(-2.1117e-01, -1.0340e-01, -1.1442e-01, -1.7396e-02,  1.5049e-02,
        1.1167e-01,  1.6566e-01,  1.7656e-01),
        T(-1.1701e-01,  1.4814e-02,  3.4042e-01,  2.0721e-01,  2.7966e-01,
          2.9419e-01,  4.0570e-01,  3.1435e-01),
        T(-1.3443e-01,  2.6182e-01,  2.3480e-01,  4.1697e-01,  3.6416e-01,
          4.6722e-01,  5.9550e-01,  2.3995e-01),
        T(-1.7022e-01,  1.6228e-01,  4.7458e-01,  4.2681e-01,  5.0652e-01,
          5.5501e-01,  4.7837e-01,  2.8895e-01),
        T(-1.4870e-01,  4.2472e-02,  1.9389e-01,  1.9779e-01,  1.7421e-01,
          2.1499e-01,  3.6211e-01,  2.7640e-01)),

      T(T(-1.1336e-01, -3.4838e-01, -2.5334e-01, -3.5754e-01, -1.9637e-01,
        -1.9538e-01, -2.5623e-01, -8.0518e-02),
        T( 1.4022e-01, -1.3842e-01, -1.7663e-01, -7.6843e-02, -1.6584e-01,
          -1.1076e-01, -2.2336e-02, -1.4169e-01),
        T( 1.1916e-01, -2.4431e-01, -2.8016e-01, -3.1579e-01, -1.2212e-01,
          -1.8509e-01, -3.2995e-01, -1.3546e-01),
        T( 3.2837e-01, -1.0017e-01, -5.8669e-02, -1.9119e-01, -8.1265e-02,
          -4.8810e-02, -3.4123e-02, -1.8205e-01),
        T( 3.0664e-01,  2.6038e-01,  2.2497e-01,  1.2124e-01,  2.0406e-01,
          2.5613e-01,  9.9566e-02,  3.5028e-02)),

      T(T(-1.9633e-02, -5.0781e-02,  6.5638e-02, -3.2848e-02,  6.6708e-02,
        1.0674e-01,  1.2211e-01,  5.6109e-02),
        T(-2.1225e-01, -1.1267e-01,  4.4753e-03,  3.3137e-02,  1.0397e-02,
          -1.5823e-04,  1.2906e-02,  2.5622e-01),
        T(-7.2515e-02,  8.4112e-02,  3.9215e-02, -7.5826e-02, -3.3679e-03,
          1.5365e-01,  7.3483e-02,  2.7152e-01),
        T(-1.1536e-01,  7.1287e-02,  7.3571e-02, -7.3979e-02,  2.3007e-02,
          8.9274e-02,  1.4812e-01,  2.7755e-01),
        T(-1.3162e-01,  1.4472e-02,  6.5554e-02, -7.8846e-02,  6.0507e-03,
          3.8389e-02,  3.7922e-02,  2.3115e-01)),

      T(T( 1.1307e-02, -1.0433e-01, -3.9474e-01, -2.4767e-01, -2.6652e-01,
        -3.3693e-01, -2.3756e-01, -3.1640e-01),
        T(-1.4293e-02, -2.4512e-01, -2.1459e-01, -2.5686e-01, -1.5175e-01,
          -2.6548e-01, -4.8950e-01, -2.5832e-01),
        T(-2.7528e-02, -8.6299e-02, -2.2113e-01, -2.3214e-01, -9.8736e-02,
          -1.4436e-01, -1.9369e-01, -3.2011e-01),
        T(-1.2594e-01, -2.7836e-01,  1.1596e-01, -9.4993e-02, -1.8065e-01,
          -1.2130e-01, -2.6858e-02, -3.9053e-02),
        T(-3.0469e-01, -2.0220e-01, -1.8175e-01, -1.5813e-01, -7.8362e-02,
          -2.3716e-02, -1.3833e-01,  3.6261e-02)),

      T(T( 3.8165e-01,  4.3931e-01,  5.5480e-01,  5.5267e-01,  5.5667e-01,
        6.7299e-01,  6.5815e-01,  4.2648e-01),
        T( 4.1052e-01,  5.2249e-01,  7.4240e-01,  7.8414e-01,  5.9953e-01,
          7.5878e-01,  8.4629e-01,  6.7562e-01),
        T( 4.1520e-01,  5.1058e-01,  5.4154e-01,  5.2576e-01,  5.6356e-01,
          5.7964e-01,  8.1495e-01,  5.9548e-01),
        T( 2.2351e-01,  5.4840e-01,  5.0080e-01,  4.6471e-01,  5.2073e-01,
          5.5147e-01,  6.5221e-01,  6.2591e-01),
        T( 2.0365e-01,  2.8469e-01,  2.2551e-01,  1.6986e-01,  2.3824e-01,
          1.3888e-01,  1.9177e-01,  1.0771e-01)),

      T(T( 1.7935e-01,  6.2567e-02, -6.0924e-03,  9.6827e-02,  1.8957e-01,
        -1.5364e-03,  1.0909e-02, -3.5122e-01),
        T( 1.0335e-01,  8.6980e-02,  9.4103e-02,  3.8394e-02,  7.0835e-02,
          2.4973e-02,  9.6422e-02, -4.1248e-01),
        T(-4.4824e-02, -2.3418e-01,  9.3685e-02,  7.7314e-02, -1.8372e-02,
          -2.1760e-01, -2.1931e-01, -3.4665e-01),
        T( 1.3558e-01, -1.8255e-01, -1.0843e-01, -1.1315e-02, -8.3934e-02,
          -1.4270e-01, -1.1504e-01, -4.6792e-01),
        T(-6.2461e-02, -1.1264e-01, -4.3329e-02, -9.8756e-02, -4.1861e-02,
          -4.5760e-02, -1.8489e-01, -2.8252e-01)),

      T(T( 2.9165e-01,  2.7573e-01,  2.7191e-01,  1.5953e-01,  3.6284e-01,
        3.0204e-01,  1.6823e-01,  1.9399e-02),
        T( 3.7739e-01,  5.0178e-01,  6.9831e-01,  4.8517e-01,  4.2516e-01,
          6.6216e-01,  4.2387e-01,  2.5806e-01),
        T( 3.0676e-01,  4.8040e-01,  4.6588e-01,  4.2752e-01,  4.5149e-01,
          5.0140e-01,  4.6945e-01,  1.0285e-01),
        T( 1.3529e-01,  4.4093e-01,  4.5228e-01,  4.8570e-01,  4.5156e-01,
          5.0629e-01,  5.7286e-01,  4.0227e-01),
        T( 7.4380e-02,  1.7571e-01,  1.0758e-01,  1.3457e-01,  1.8254e-01,
          1.6830e-01,  2.4106e-01,  3.4690e-01)),

      T(T(-4.1430e-01, -2.9757e-01, -2.6960e-01, -3.8462e-01, -3.2182e-01,
        -3.2279e-01, -2.6078e-01, -1.1551e-01),
        T(-6.4196e-01, -3.2487e-01, -3.5607e-01, -5.3163e-01, -4.2786e-01,
          -5.2061e-01, -3.3946e-01, -5.6125e-02),
        T(-5.6227e-01, -5.0931e-01, -5.3846e-01, -6.3502e-01, -6.6964e-01,
          -5.1968e-01, -6.2669e-01, -1.9030e-01),
        T(-5.5267e-01, -4.5318e-01, -5.4958e-01, -7.7479e-01, -6.4538e-01,
          -5.6292e-01, -5.8216e-01, -2.3408e-01),
        T(-4.3350e-01, -2.0207e-01, -4.2300e-01, -5.1902e-01, -3.3993e-01,
          -3.1999e-01, -3.2529e-01,  7.7577e-02)),

      T(T( 5.3138e-03,  1.3269e-01,  2.3479e-01,  1.2690e-01,  1.4878e-01,
        2.7591e-01,  1.1946e-01,  4.7279e-01),
        T( 1.2066e-01,  3.5028e-02,  7.9247e-02, -3.0471e-02,  1.7445e-01,
          3.8030e-02,  2.7422e-01,  2.1577e-01),
        T(-5.6576e-02, -7.2817e-02, -6.1568e-02, -5.1041e-02,  3.6177e-02,
          4.1355e-02,  4.9056e-02,  2.7274e-01),
        T( 1.5992e-01, -3.9607e-03,  9.2213e-02,  6.3887e-02,  5.6275e-02,
          1.1023e-01,  4.2750e-02,  3.3177e-01),
        T( 9.5269e-02, -5.9157e-02, -1.9811e-01, -3.3203e-02, -1.0727e-01,
          -8.3988e-02, -7.8393e-02, -2.3152e-02)),

      T(T(-8.4676e-02,  6.6023e-02, -3.0087e-02,  4.9484e-02, -1.8025e-02,
        -8.1947e-02, -3.3328e-02, -3.8251e-02),
        T(-9.6340e-02,  9.2965e-02,  8.7817e-02, -1.4713e-01,  7.7447e-02,
          -8.8184e-02,  3.0755e-02,  4.2580e-02),
        T(-2.3981e-01,  8.0054e-02, -2.1244e-02,  2.9779e-02, -4.7366e-02,
          9.8615e-02,  2.6880e-02,  9.6122e-02),
        T(-1.4127e-01,  1.0424e-01, -1.7204e-02,  3.6855e-02,  1.1148e-01,
          -4.4323e-02, -7.0628e-02,  1.4045e-01),
        T(-8.8397e-02,  6.2781e-02,  9.3936e-02, -2.1727e-02,  1.2359e-01,
          1.0509e-01, -6.1494e-03, -3.7053e-02)),

      T(T(-2.6278e-01, -2.7690e-01, -3.8932e-01, -4.8434e-01, -3.9157e-01,
        -3.1336e-01, -5.0085e-01, -3.4118e-01),
        T(-1.4007e-01, -2.1220e-01, -3.6247e-01, -3.6735e-01, -3.4954e-01,
          -3.5540e-01, -5.1504e-01, -3.8733e-01),
        T(-1.2803e-01, -2.0427e-01, -4.3225e-01, -4.1845e-01, -4.1629e-01,
          -4.9018e-01, -4.1550e-01, -3.2947e-01),
        T(-2.1014e-01, -6.4286e-01, -5.7993e-01, -3.8692e-01, -4.4612e-01,
          -5.3921e-01, -3.5375e-01, -3.0202e-01),
        T( 1.9843e-01,  2.0916e-02, -4.8855e-02,  1.0853e-02,  1.0670e-01,
          -2.1639e-02,  1.5961e-02, -2.3776e-02)))))

    val feature3 = Tensor[Float](T(T(T(
      T(3.7673e-01,  1.1502e-01,  1.1556e-01, -9.2271e-02),
      T(2.4450e-01,  2.8779e-01,  3.6208e-01,  1.7919e-01),
      T(6.6130e-02,  4.2156e-01,  5.5955e-01,  4.7366e-01)),
      T(T(-1.4766e-02,  5.5915e-03, -4.9012e-02, -3.3631e-02),
        T(-1.1334e-03, -1.2790e-01, -1.7835e-01, -6.8920e-02),
        T(-8.0504e-02, -6.0866e-02, -1.4415e-01, -1.2333e-01)),
      T(T(-1.7262e-01, -1.3817e-01, -2.4408e-01, -1.8436e-01),
        T(-2.0755e-01, -2.1823e-01, -1.8442e-01, -2.0744e-01),
        T(-7.6305e-02, -1.9685e-01, -2.0221e-01, -2.4480e-01)),
      T(T(-3.3391e-01, -3.8425e-01, -3.8330e-01, -2.9358e-01),
        T(-2.4418e-01, -2.4693e-01, -3.5130e-01, -5.3146e-02),
        T( 1.1547e-01, -1.3436e-03, -5.0184e-02,  6.3076e-02)),

      T(T( 3.9483e-03, -1.3242e-01, -4.2064e-02,  2.4186e-02),
        T(-5.1996e-03, -2.5759e-01, -2.2242e-01,  4.7405e-02),
        T(-1.4478e-01, -2.0359e-01, -2.5767e-01, -3.5488e-02)),

      T(T( 3.1427e-01,  2.5881e-01,  1.6041e-01,  5.4454e-02),
        T( 4.0701e-01,  3.4123e-01,  8.4936e-02,  4.9005e-02),
        T( 2.3012e-01,  1.8746e-01,  1.1636e-01,  4.1248e-02)),

      T(T(-4.3280e-01, -3.9368e-01, -2.4515e-01,  1.6576e-02),
        T(-2.3274e-01, -3.0436e-01, -3.5185e-01,  5.2503e-03),
        T(-1.5804e-01, -5.7281e-03,  6.8822e-02,  3.0282e-01)),

      T(T( 5.5299e-01,  7.2798e-01,  6.5606e-01,  4.6812e-01),
        T( 1.2163e-01,  1.7095e-01,  4.3655e-02,  3.6591e-01),
        T(-2.2487e-01, -2.9798e-01, -3.2403e-01, -6.2262e-03)),

      T(T( 4.3768e-02, -1.8376e-01,  1.7166e-02, -6.5932e-02),
        T(-3.9829e-01, -2.7779e-01, -4.1301e-01, -2.7294e-01),
        T(-2.8395e-01, -3.9729e-01, -3.7678e-01, -2.5337e-04)),

      T(T( 2.3422e-01,  2.1795e-01,  1.9150e-01, -3.9981e-02),
        T( 1.2326e-01,  5.0369e-02,  9.3241e-02,  1.2628e-01),
        T(-1.3085e-02, -1.4456e-02, -1.0936e-02,  1.4343e-01)),

      T(T( 6.8699e-01,  6.9262e-01,  7.8152e-01,  6.0440e-01),
        T( 6.5436e-01,  4.7108e-01,  4.0930e-01,  2.6556e-01),
        T( 1.6075e-01,  9.0362e-02, -1.1976e-02,  2.9552e-02)),

      T(T(-2.7419e-01, -1.1871e-01, -2.8956e-01, -1.8938e-01),
        T(-1.1405e-02,  1.0097e-01, -8.1071e-02, -1.5469e-01),
        T( 1.8420e-01,  2.9861e-01,  2.7921e-01,  1.2819e-01)),

      T(T( 1.1599e-01,  1.5131e-02,  2.0954e-01,  1.9711e-01),
        T(-4.1447e-02, -2.8826e-01, -1.4256e-01, -1.2891e-02),
        T(-1.2281e-01, -3.5502e-01, -3.6348e-01, -1.4371e-01)),

      T(T(-1.8883e-01, -3.1809e-01, -3.0905e-01, -1.7758e-01),
        T(-3.9224e-01, -3.4753e-01, -3.0467e-01, -1.3315e-01),
        T(-1.8222e-01, -2.3359e-01, -1.8824e-01, -3.8835e-02)),

      T(T( 2.2193e-02, -3.0051e-01, -3.8877e-01, -5.1829e-01),
        T( 3.3667e-01,  2.3382e-01,  9.8753e-02, -2.1486e-02),
        T( 5.3022e-01,  5.7175e-01,  5.2757e-01,  1.2176e-01)),

      T(T( 1.4094e-01,  2.5779e-01,  3.1826e-01,  1.6091e-02),
        T( 2.2635e-01,  4.6297e-01,  1.9690e-01, -1.7924e-01),
        T( 1.5689e-01,  2.6176e-01,  6.6246e-02,  3.4085e-02)),

      T(T( 1.6763e-01,  2.6483e-02,  1.3764e-01,  1.0852e-01),
        T( 2.6991e-01,  2.5520e-01,  1.4181e-01,  1.2709e-01),
        T( 5.1888e-02,  1.3602e-01,  5.8644e-03, -6.4347e-02)),

      T(T(-2.5219e-01, -2.5751e-01, -3.8911e-01, -1.2430e-01),
        T(-2.8035e-01, -5.5337e-01, -6.3831e-01, -2.9456e-01),
        T(-4.3004e-03, -2.4734e-02,  7.8932e-02, -3.0794e-02)),

      T(T(-4.6066e-01, -1.5902e-01, -2.1619e-01,  7.7184e-02),
        T(-8.5650e-01, -5.1997e-01, -6.7169e-01, -1.0305e-01),
        T(-4.7292e-01, -5.3208e-01, -3.4241e-01, -1.4389e-01)),

      T(T(-1.6785e-01, -2.8120e-01, -1.2661e-01, -2.9193e-01),
        T(-2.5622e-01, -2.3158e-01, -3.5808e-01, -8.5205e-02),
        T(-2.2464e-01, -1.6810e-01, -2.7909e-01, -1.8439e-01)),

      T(T( 4.6831e-02,  1.8525e-01,  1.1712e-01, -1.4445e-03),
        T( 6.1479e-02, -1.4277e-01, -1.9551e-01, -1.0229e-01),
        T( 8.6038e-02, -2.7204e-01, -2.4261e-01, -2.8319e-01)),

      T(T(-3.7318e-01, -1.4314e-01, -1.1857e-01,  2.4119e-01),
        T(-3.0682e-01, -5.4077e-01, -4.0635e-01, -1.3582e-01),
        T(-1.5620e-01, -3.2820e-01, -2.3614e-01, -2.7073e-01)),

      T(T( 1.0589e-01, -5.0703e-02, -2.2467e-02, -1.6940e-01),
        T( 1.1289e-01,  1.5021e-01, -3.4054e-02, -5.1017e-02),
        T( 1.3883e-01,  9.4760e-02,  1.9861e-02, -6.1184e-02)),

      T(T(-2.2929e-01, -3.8973e-01, -3.3200e-01, -3.2292e-01),
        T(-3.7399e-01, -3.1045e-01, -1.6902e-01, -1.2695e-01),
        T(-3.1009e-01, -1.7232e-01, -2.0117e-01,  1.6345e-01)),

      T(T( 2.5619e-02,  1.3065e-01, -1.6702e-01, -3.0143e-01),
        T(-3.6298e-01, -1.0372e-01, -8.0963e-02,  1.6065e-01),
        T(-2.1166e-02,  8.9441e-02,  2.6375e-01,  2.0303e-01)),

      T(T(-1.3499e-01, -3.2245e-02,  1.4585e-01, -1.0395e-01),
        T( 8.9685e-02,  1.2418e-01,  2.6379e-01,  1.6319e-01),
        T( 2.3926e-01,  3.4612e-01,  4.1945e-01,  3.2779e-01)),

      T(T( 1.8226e-01,  3.0477e-01,  2.7820e-01,  3.8056e-02),
        T(-6.6890e-02,  5.7431e-02,  7.1238e-02, -1.0192e-01),
        T(-4.4292e-02, -6.1875e-02,  7.4691e-02, -2.8245e-02)),

      T(T(-2.6210e-01, -2.4608e-01, -3.6911e-01, -4.0621e-01),
        T(-1.0663e-01, -2.2854e-01, -3.6074e-01, -3.6388e-01),
        T(-8.6804e-02, -4.1357e-01, -1.2897e-01, -1.6918e-01)),

      T(T(-3.7142e-03,  1.7629e-02, -7.3282e-02,  8.4676e-02),
        T( 4.5257e-02, -3.0207e-02, -2.2577e-01, -5.2348e-02),
        T( 6.4843e-02,  5.5240e-02, -4.7973e-02, -5.6083e-02)),

      T(T(-1.3279e-01, -2.8086e-01, -1.3086e-01, -2.2159e-01),
        T(-2.2752e-01, -2.4737e-01, -1.9156e-01, -9.5462e-02),
        T(-3.1846e-01, -1.3288e-01, -1.7500e-01,  3.6456e-02)),

      T(T(-8.3068e-02, -2.8774e-01, -3.5787e-01, -4.6222e-01),
        T(-8.6831e-02, -3.5756e-01, -2.9260e-01, -5.1084e-01),
        T(-2.2406e-01, -4.6708e-01, -3.4945e-01, -3.0946e-01)),

      T(T( 2.7424e-02,  2.5984e-02,  1.0331e-01,  4.2711e-03),
        T(-5.4447e-02, -5.7703e-03,  7.6161e-02, -5.9949e-03),
        T( 8.8393e-02,  1.0681e-01,  7.7768e-02, -3.3838e-02)))))

    val features4 = Tensor[Float](T(T(T(
      T(1.3306e-01,  2.4154e-02),
      T( 2.9762e-01,  6.8892e-01)),
      T(T( 1.7062e-02,  2.8542e-01),
        T(-3.4114e-02,  2.9889e-01)),
      T(T(-2.6212e-02, -3.2080e-01),
        T(-1.1354e-01, -1.6867e-01)),
      T(T(-3.1879e-02,  1.3109e-01),
        T(-4.5453e-01, -1.1509e-01)),
      T(T( 1.1722e-01, -1.3790e-01),
        T( 8.0368e-02,  3.1526e-01)),
      T(T(-5.7188e-02, -4.3613e-02),
        T(-2.3406e-02,  1.4941e-02)),
      T(T(-2.0021e-01, -1.1631e-01),
        T( 8.5138e-02,  1.4641e-01)),
      T(T(-1.3221e-01,  1.6576e-01),
        T( 3.3118e-01,  3.2521e-01)),
      T(T(-2.0019e-02,  1.8039e-01),
        T(-1.8094e-01,  3.0093e-01)),
      T(T(-2.0558e-01, -3.3062e-03),
        T(-2.9925e-01,  5.6967e-02)),
      T(T(-3.4304e-03, -3.1849e-02),
        T( 3.5923e-01, -1.7474e-01)),
      T(T(-1.2274e-01,  1.1009e-01),
        T(-1.4373e-01,  4.5003e-03)),
      T(T(-3.7618e-01, -1.9660e-01),
        T(-1.6311e-01, -6.3341e-02)),
      T(T(-5.1959e-02,  2.1091e-01),
        T(-2.4317e-01,  9.6691e-02)),
      T(T(-1.4867e-01, -4.3208e-02),
        T(-2.7369e-01, -1.3647e-01)),

      T(T(-1.6049e-01,  5.9315e-03),
        T( 1.6175e-01,  1.3138e-01)),

      T(T(-1.8891e-01,  3.6631e-02),
        T( 1.6716e-01,  1.7213e-01)),

      T(T(-1.3111e-01, -4.3095e-02),
        T(-4.4224e-01,  2.2486e-01)),

      T(T(-2.1512e-02,  2.4053e-01),
        T(-2.3618e-01,  1.2767e-01)),

      T(T( 2.2032e-01,  1.1501e-01),
        T( 1.3405e-01,  8.8305e-02)),

      T(T( 9.3608e-02, -2.4049e-01),
        T( 1.3396e-01, -5.6414e-02)),

      T(T( 3.2256e-02,  1.1333e-01),
        T(-9.0203e-02, -8.8078e-02)),

      T(T(-7.7101e-02, -1.6761e-01),
        T( 4.5884e-02, -8.5484e-02)),

      T(T( 8.6822e-02,  2.9959e-01),
        T( 1.6186e-02, -8.8720e-02)),

      T(T( 1.6495e-01, -1.2959e-01),
        T(-7.2674e-02,  5.9355e-02)),

      T(T( 7.5619e-02, -4.7239e-04),
        T(-2.5429e-01, -9.9540e-02)),

      T(T( 4.7953e-02, -4.0567e-02),
        T( 2.6528e-01, -2.3381e-01)),

      T(T( 1.2266e-01, -1.3573e-01),
        T(-1.3384e-01, -2.7363e-01)),

      T(T(-4.4437e-02,  4.4493e-02),
        T(-2.7812e-01,  9.0590e-02)),

      T(T( 2.2451e-01,  1.1600e-01),
        T(-2.4333e-02,  1.1982e-01)),

      T(T( 8.7260e-02, -3.6186e-02),
        T( 1.7010e-01,  1.3169e-02)),

      T(T(-2.0984e-01, -1.4514e-01),
        T(-1.6126e-01, -3.1556e-01)))))

    val features5 = Tensor[Float](T(T(T(
      T( 0.1331)),
      T(T( 0.0171)),
      T(T(-0.0262)),
      T(T(-0.0319)),
      T(T( 0.1172)),
      T(T(-0.0572)),
      T(T(-0.2002)),
      T(T(-0.1322)),
      T(T(-0.0200)),
      T(T(-0.2056)),
      T(T(-0.0034)),
      T(T(-0.1227)),
      T(T(-0.3762)),
      T(T(-0.0520)),
      T(T(-0.1487)),
      T(T(-0.1605)),
      T(T(-0.1889)),
      T(T(-0.1311)),
      T(T(-0.0215)),
      T(T( 0.2203)),
      T(T( 0.0936)),
      T(T( 0.0323)),
      T(T(-0.0771)),
      T(T( 0.0868)),
      T(T( 0.1649)),
      T(T( 0.0756)),
      T(T( 0.0480)),
      T(T( 0.1227)),
      T(T(-0.0444)),
      T(T( 0.2245)),
      T(T( 0.0873)),
      T(T(-0.2098)))))

    val proposals = Tensor[Float](T(
      T(10.0325,  6.3734, 33.1389, 39.0000),
      T(42.0396,  0.0000, 57.0000, 39.0000),
      T(30.0440,  0.0000, 53.1591, 39.0000),
      T(14.0508,  0.0000, 37.1558, 39.0000),
      T(22.0329,  6.3159, 45.1479, 39.0000),
      T(34.0218,  6.2644, 57.0000, 39.0000),
      T(25.9527, 14.0432, 49.0577, 39.0000),
      T( 5.9588, 14.0434, 29.0603, 39.0000),
      T(18.0397,  0.0000, 41.1646, 32.9881),
      T( 6.0395,  0.0000, 29.1221, 36.9547),
      T( 0.0000,  6.1839, 21.1259, 39.0000),
      T(26.0294,  2.2199, 49.1306, 39.0000),
      T( 2.0404,  0.0000, 25.1159, 39.0000),
      T(17.9533, 13.9613, 41.0660, 39.0000),
      T(46.0027, 10.2389, 57.0000, 39.0000),
      T(37.9761, 14.1155, 57.0000, 39.0000),
      T(34.0410,  0.0000, 57.0000, 32.9083),
      T(10.0404,  0.0000, 33.1331, 32.9373),
      T( 0.0000,  0.0000, 13.1090, 36.8811),
      T(46.0241,  0.0000, 57.0000, 33.0977),
      T( 0.0000, 14.0626, 17.0480, 39.0000),
      T(26.0361,  0.0000, 49.1293, 28.9797),
      T( 0.0000,  0.0000, 21.1132, 32.9505),
      T( 0.0000,  0.0000, 34.9895, 39.0000),
      T( 0.0000,  0.0000, 13.0470, 25.0569),
      T( 0.0000,  9.9915, 13.0951, 39.0000),
      T(14.0408,  0.0000, 37.0406, 25.0867),
      T( 0.0000,  3.8712, 57.0000, 39.0000),
      T(38.0196,  0.0000, 57.0000, 25.0663),
      T( 2.0337,  0.0000, 25.0591, 25.0698),
      T(35.9955,  0.0000, 57.0000, 39.0000),
      T( 0.0000,  0.0000, 57.0000, 39.0000),
      T( 0.0000,  0.0000, 45.1150, 12.8114),
      T(30.0279,  0.0000, 53.0665, 25.0261),
      T(22.0316,  0.0000, 45.0657, 25.0300),
      T( 0.0000,  0.0000, 47.1287, 35.0130),
      T( 0.0000,  0.0000, 57.0000, 39.0000),
      T(34.0442,  0.0000, 57.0000, 12.8838),
      T( 0.0000, 11.8722, 47.1325, 39.0000),
      T( 8.0735, 11.9330, 57.0000, 39.0000),
      T( 0.0000,  0.0000, 57.0000, 39.0000),
      T(14.0144,  0.0000, 57.0000, 12.8280),
      T(19.9533,  0.0000, 57.0000, 39.0000),
      T( 0.0000,  0.0000, 25.0483, 12.8890),
      T( 0.0000,  0.0000, 57.0000, 26.8729),
      T( 0.0000, 22.0350, 16.9237, 39.0000),
      T(33.8853, 22.0623, 57.0000, 39.0000),
      T(13.8882, 22.0346, 44.9419, 39.0000),
      T(29.7725, 18.0646, 57.0000, 39.0000),
      T( 1.8544,  0.0000, 49.0127, 16.7653),
      T(41.9284, 21.9864, 57.0000, 39.0000),
      T( 0.0000, 22.0520, 28.9180, 39.0000),
      T(21.8772, 22.0629, 52.9434, 39.0000),
      T( 0.0000, 10.0075, 24.9857, 32.8461),
      T( 5.7193, 18.0767, 36.8543, 39.0000),
      T(29.8319,  0.0000, 57.0000, 16.7563),
      T( 0.0000,  0.0000, 32.9150, 16.8088),
      T( 0.0000,  0.0000, 16.9420, 17.1428),
      T( 1.6963,  6.0607, 32.8728, 37.1821),
      T( 0.0000,  0.0000, 28.8230, 29.1576),
      T(17.7341, 10.0195, 48.9181, 39.0000),
      T( 0.0000, 26.0452, 24.8489, 39.0000),
      T(29.7240, 25.9695, 57.0000, 39.0000),
      T( 9.6899, 10.0162, 40.8823, 39.0000),
      T(41.8531,  0.0000, 57.0000, 17.0701),
      T(25.6318,  2.0392, 56.8118, 33.1456),
      T(13.8113,  0.0000, 44.9093, 17.1129),
      T( 9.7276,  0.0000, 56.8312, 20.8028),
      T( 0.0000, 14.0513, 24.9343, 39.0000),
      T(13.6774,  6.0375, 44.8542, 37.1535),
      T(25.7071, 10.0702, 56.8785, 39.0000),
      T( 5.6743, 22.0251, 52.8469, 39.0000),
      T( 9.6631,  0.0000, 40.8980, 29.1623),
      T( 0.0000,  0.0000, 20.9146, 21.1472),
      T( 9.6258,  5.9585, 56.8359, 28.7961),
      T( 9.6139, 26.0241, 56.8425, 39.0000),
      T(21.8153,  0.0000, 52.9105, 17.0915),
      T( 0.0000, 26.0160, 36.8510, 39.0000),
      T( 0.0000, 17.9885, 44.8981, 39.0000),
      T( 0.0000,  2.0154, 36.8120, 24.8325),
      T(17.5714, 17.9862, 57.0000, 39.0000),
      T( 5.6057, 13.9892, 52.8087, 36.7785),
      T( 0.0000,  5.9787, 40.7850, 28.8030),
      T(29.4939,  9.9786, 57.0000, 32.8101),
      T(25.7066,  0.0000, 56.8438, 21.1803),
      T(17.5000,  1.9700, 57.0000, 24.7670),
      T( 0.0000,  9.9872, 36.7647, 32.8057),
      T(17.7748,  0.0000, 48.9333, 21.1646),
      T(13.5129,  9.9606, 57.0000, 32.7500),
      T( 5.6300,  0.0000, 36.7915, 21.2175),
      T( 5.5200,  1.9692, 52.6923, 24.7747)))

    mask.evaluate()
    val out = mask.buildRoiHeads(T(features2, feature3,
      features4, features5), proposals)

    println("done")
  }

  "build backbone" should "be ok" in {
    val resNetOutChannels = 256
    val backboneOutChannels = 256
    val mask = new MaskRCNN(resNetOutChannels, backboneOutChannels)

    var input = Tensor[Float](T(T(T(
      T(-0.7767,  0.6317, -0.4749, -0.0322,  0.3530,  0.5078, -0.4746,
        -0.9143, -0.5839, -0.7639, -0.7566,  0.4712,  0.4235,  0.5752,
        -0.1634,  0.8028,  0.9938,  0.5130),
      T(-0.5522, -0.3953, -0.6432,  0.6477,  0.1115,  0.9540, -0.1120,
        0.8957,  0.4890, -0.0216, -0.5149,  0.4007,  0.0554, -0.5056,
        0.5818, -0.1530, -0.9662, -0.5582),
      T( 0.9071,  0.4128, -0.6742,  0.7804,  0.0325, -0.9282,  0.2953,
        -0.3139, -0.3635,  0.0522, -0.9107,  0.0247,  0.8102,  0.1977,
        -0.1100,  0.4557, -0.0875, -0.3223),
      T( 0.2423,  0.1060,  0.3792, -0.2625,  0.8105,  0.6712, -0.3922,
        0.3452,  0.1479,  0.8466,  0.8356,  0.5181,  0.5550,  0.2358,
        -0.3243, -0.5659,  0.8907,  0.4231),
      T(-0.7685,  0.3147, -0.3097, -0.9093,  0.9595,  0.1096,  0.3736,
        -0.0159, -0.8504,  0.9210, -0.3458, -0.9795,  0.9032, -0.4289,
        -0.5352,  0.8282,  0.5336, -0.6682),
      T(-0.1213, -0.5514,  0.7870, -0.9005, -0.6440, -0.3978, -0.6214,
        0.8372, -0.5737, -0.2087,  0.2033, -0.1532,  0.0449, -0.1650,
        -0.9320,  0.8315, -0.3842,  0.2539),
      T( 0.6554,  0.3187, -0.8226, -0.0221,  0.1775,  0.4680,  0.6994,
        0.8224, -0.0305,  0.8871, -0.2191, -0.5002, -0.3587,  0.9505,
        0.5164,  0.3376, -0.4698, -0.5328),
      T( 0.0114,  0.1377, -0.8733,  0.7986, -0.4535, -0.3205, -0.6241,
        0.1068, -0.4637,  0.9112,  0.9523,  0.1867, -0.3752,  0.8863,
        0.7037,  0.9631, -0.7736, -0.0434),
      T(-0.1127, -0.2305, -0.0958,  0.1137,  0.9905, -0.9970, -0.8375,
        -0.0185, -0.5740, -0.0794, -0.7228, -0.9446,  0.1325, -0.2994,
        0.3110,  0.5334, -0.5462,  0.5110),
      T( 0.2916, -0.2653, -0.6460, -0.4069,  0.9849, -0.5793, -0.7416,
        -0.6563,  0.8254,  0.3635, -0.6093,  0.9981, -0.7733, -0.9730,
        -0.7100,  0.5639, -0.3732, -0.4033),
      T(-0.3129, -0.5945,  0.9584, -0.0106, -0.2766,  0.9373, -0.9282,
        -0.3918,  0.9733, -0.7420,  0.3773, -0.6727, -0.8201, -0.3722,
        -0.7562, -0.2968, -0.5367, -0.4305),
      T(-0.2961, -0.4345, -0.5159, -0.0144,  0.1544, -0.2457, -0.5120,
        0.7988, -0.7918,  0.8386,  0.2403, -0.2683, -0.8754,  0.1935,
        -0.8342,  0.6370, -0.0072, -0.8823),
      T( 0.9681,  0.1671,  0.3474, -0.0523,  0.8672, -0.4885, -0.6988,
        0.5712, -0.1696,  0.1617, -0.7825,  0.4129, -0.9790, -0.0797,
        -0.4111, -0.9050,  0.2801, -0.2433),
      T( 0.1774, -0.8559,  0.8280, -0.9829, -0.5653, -0.6220, -0.8178,
        0.2688, -0.3717,  0.4104,  0.2894,  0.9034, -0.2837, -0.3177,
        -0.9135, -0.1253,  0.9895, -0.6503),
      T(-0.7253,  0.6009,  0.4007,  0.7606, -0.6855, -0.3315,  0.9304,
        -0.6277, -0.6984, -0.3634, -0.9358, -0.3421,  0.0603,  0.2801,
        0.5909, -0.3867, -0.5207, -0.7688),
      T(-0.0321, -0.2112, -0.8398,  0.5565,  0.3371, -0.5375, -0.7672,
        -0.6157, -0.5239, -0.6714, -0.6553,  0.6924, -0.7855,  0.4226,
        -0.7187, -0.4101, -0.3472, -0.0584),
      T(-0.2044,  0.4110,  0.8324,  0.6120,  0.4533,  0.6108, -0.6608,
        -0.5954,  0.8388, -0.9698, -0.9351,  0.9077,  0.1128,  0.5135,
        -0.6854, -0.2061, -0.5238, -0.7464),
      T(-0.1079, -0.9259,  0.2884,  0.6215, -0.4900,  0.7215,  0.6500,
        -0.5528, -0.8456, -0.0365, -0.8448, -0.8938, -0.4781, -0.7864,
        -0.3979, -0.0827,  0.0444, -0.8634),
      T( 0.8236,  0.6572, -0.6729, -0.6449,  0.4326,  0.8709, -0.7140,
        -0.2135, -0.7751, -0.3826,  0.9946, -0.1486,  0.3780,  0.9314,
        -0.9485, -0.1591, -0.8688, -0.0983),
      T(-0.8893, -0.3720,  0.4920,  0.8714,  0.7849, -0.7259, -0.6393,
        -0.1955, -0.1407, -0.2615, -0.6777,  0.8844,  0.7554,  0.0641,
        0.0784, -0.6840,  0.2840,  0.3862)),
      T(T(-0.9937,  0.3502, -0.6925,  0.0561, -0.7676, -0.1139, -0.5730,
        -0.5764,  0.3123, -0.2556, -0.2695,  0.4109, -0.8322, -0.6467,
        0.5978,  0.9476, -0.4670, -0.7182),
        T( 0.5260,  0.9383, -0.2584, -0.8752,  0.1734,  0.4347, -0.7645,
          0.3581, -0.6520, -0.6786,  0.1355, -0.0343,  0.6823, -0.5295,
          0.2935,  0.3608, -0.9663, -0.2061),
        T( 0.0704, -0.5954,  0.8112, -0.9855,  0.5505, -0.2575, -0.8574,
          -0.5125,  0.5218, -0.0707,  0.3545,  0.9719,  0.6294,  0.4823,
          0.9419,  0.1360, -0.5028, -0.5442),
        T( 0.5673, -0.4125, -0.7590, -0.2002, -0.8950, -0.6035,  0.6170,
          -0.4307,  0.0138, -0.9219, -0.3028,  0.3626,  0.2716,  0.0446,
          -0.2369, -0.8103,  0.3075,  0.1161),
        T( 0.6011, -0.9288,  0.6588,  0.7678, -0.6523,  0.4671,  0.4665,
          0.3260, -0.1567,  0.4127,  0.6477, -0.7431, -0.8806, -0.4552,
          0.4460,  0.3941,  0.7595, -0.3875),
        T(-0.1693, -0.7935, -0.4724,  0.4883, -0.9939, -0.3892, -0.4679,
          -0.9639, -0.0532, -0.1428, -0.7899, -0.9388, -0.2362, -0.0707,
          -0.2912,  0.9040, -0.4531, -0.5671),
        T( 0.0792,  0.5894, -0.1122, -0.2089, -0.7086, -0.1887,  0.6459,
          0.3378,  0.1729,  0.2001,  0.0400, -0.0124, -0.3343,  0.4281,
          0.3754,  0.6791, -0.5427, -0.6742),
        T( 0.4227,  0.5577, -0.2264, -0.7497,  0.3070, -0.4958, -0.5074,
          -0.6450,  0.4470,  0.6203, -0.7634, -0.6605, -0.3368,  0.7697,
          0.8174,  0.4651, -0.6808,  0.9072),
        T(-0.4782,  0.8635, -0.0853,  0.9245, -0.0010,  0.2295, -0.7131,
          -0.9983,  0.3084, -0.2764, -0.2133,  0.1740,  0.5011,  0.1126,
          0.2721,  0.2074,  0.7081, -0.4855),
        T( 0.4820, -0.2106,  0.2040,  0.8071,  0.8781, -0.4614,  0.9404,
          -0.2102, -0.0916,  0.6917,  0.8065, -0.5095, -0.4690, -0.3421,
          -0.5879,  0.3090,  0.8344,  0.5046),
        T(-0.4972,  0.7216,  0.2555,  0.8156, -0.4604, -0.8077, -0.9627,
          -0.3414,  0.7549, -0.4390, -0.3953, -0.6092, -0.6111, -0.2135,
          0.9189,  0.7397, -0.6067,  0.0623),
        T( 0.3616, -0.1882, -0.9984,  0.8188, -0.6950, -0.2005,  0.5873,
          -0.3700,  0.8219, -0.9748, -0.7416, -0.8625,  0.6110, -0.0923,
          0.8967, -0.4247, -0.8535,  0.6746),
        T( 0.2306, -0.4474,  0.0199,  0.6481,  0.1255, -0.9280,  0.3170,
          -0.9868,  0.1984,  0.7814,  0.8609,  0.5046,  0.8515, -0.5180,
          -0.9686, -0.5878,  0.0335,  0.3313),
        T( 0.8816,  0.2404,  0.8682,  0.5169, -0.9847,  0.4374,  0.0860,
          0.1257, -0.6400, -0.9781, -0.0396, -0.9107,  0.4829, -0.2877,
          0.7342, -0.2745,  0.3880, -0.0482),
        T(-0.4289,  0.2515, -0.3266,  0.3737, -0.7529, -0.0818, -0.5356,
          0.5235,  0.1423, -0.6117,  0.7922, -0.4498,  0.6471, -0.5820,
          -0.8728,  0.1719,  0.6032, -0.8251),
        T(-0.7598,  0.0936, -0.9353,  0.0304, -0.4683, -0.0040, -0.4607,
          0.9384,  0.4726,  0.0254, -0.0558,  0.3633, -0.4330, -0.4274,
          0.5457, -0.9579, -0.4633,  0.5689),
        T(-0.4948,  0.4971,  0.9163, -0.4537,  0.3993,  0.3803, -0.0650,
          0.6125, -0.8812,  0.1193, -0.4435, -0.7883,  0.2975, -0.9530,
          0.2860,  0.1074,  0.4756,  0.1964),
        T( 0.7179, -0.2535,  0.2406, -0.7721,  0.9244, -0.7792, -0.6800,
          0.9394, -0.4375,  0.8106,  0.0641,  0.7547, -0.7419, -0.1694,
          0.2915,  0.2083, -0.3227, -0.5777),
        T(-0.1488,  0.4304, -0.7608, -0.6858,  0.1218,  0.4829,  0.1727,
          0.0651,  0.5626,  0.6677, -0.0780,  0.2218, -0.3532,  0.0508,
          -0.0424,  0.3566,  0.1651, -0.3209),
        T( 0.7442,  0.3283, -0.7820, -0.2872, -0.4265, -0.9898, -0.1019,
          0.0210, -0.2512, -0.7553, -0.5404, -0.4416, -0.8282,  0.9510,
          0.9048,  0.6925, -0.6111, -0.8080)),
      T(T(-0.1142, -0.4107, -0.6453,  0.8724,  0.7219, -0.0073, -0.1745,
        0.8256, -0.3289, -0.9148,  0.2852,  0.6095,  0.8345,  0.7262,
        0.0392,  0.5028,  0.0234,  0.3259),
        T( 0.5919, -0.5676,  0.6113,  0.4649,  0.1327,  0.0144, -0.8684,
          0.3168, -0.4125, -0.0498,  0.8921, -0.0492,  0.3497,  0.8809,
          -0.0372, -0.7265,  0.2528,  0.7129),
        T(-0.9994,  0.4783,  0.5157, -0.8340, -0.1011, -0.6990,  0.5381,
          0.7556, -0.9029, -0.3316,  0.7034, -0.0408, -0.3513, -0.6281,
          -0.3031,  0.5648,  0.1794, -0.3823),
        T(-0.3217, -0.4526, -0.5716, -0.6036,  0.4017,  0.1012, -0.2849,
          0.9514, -0.2937,  0.0786, -0.8871, -0.4434,  0.6719,  0.0854,
          0.3333,  0.9832,  0.7973, -0.4942),
        T(-0.3105,  0.6190, -0.7508, -0.5638, -0.0714,  0.0814, -0.1162,
          0.4304,  0.0629,  0.0081, -0.6835, -0.0988,  0.6334, -0.3581,
          -0.9346,  0.3838, -0.0600,  0.5654),
        T(-0.4122,  0.7901, -0.2936,  0.0183,  0.5621,  0.8370, -0.1283,
          0.7334, -0.4812, -0.4205,  0.9054, -0.3940,  0.6789,  0.3079,
          0.1417, -0.5909, -0.9128,  0.0226),
        T( 0.8650,  0.5991, -0.2269, -0.5849,  0.1043,  0.2968,  0.3378,
          -0.6644,  0.6750, -0.1875,  0.1500,  0.9874,  0.3183, -0.7000,
          -0.2164,  0.1765, -0.1500,  0.0310),
        T(-0.2243, -0.9448, -0.1693, -0.1902,  0.8027,  0.4152, -0.2710,
          -0.5756,  0.0895, -0.5407, -0.3931,  0.2350, -0.9535, -0.5144,
          -0.0238,  0.2563,  0.7137,  0.9349),
        T(-0.1144, -0.8418,  0.3079, -0.3106,  0.5570,  0.2740, -0.5752,
          0.9643, -0.1315, -0.5235,  0.3923, -0.0203, -0.8707,  0.0961,
          0.7751,  0.1721,  0.0757, -0.2718),
        T( 0.7361, -0.8820,  0.3903, -0.0598, -0.9468,  0.2083,  0.0836,
          0.1768, -0.7008, -0.6665, -0.1816, -0.1314,  0.8482, -0.3006,
          0.6226, -0.3566, -0.3518, -0.5070),
        T(-0.3029, -0.5946,  0.8577,  0.8934,  0.2062, -0.6446,  0.7078,
          -0.3365, -0.5339, -0.4022, -0.9784, -0.4170, -0.3787, -0.1049,
          0.4976,  0.2958, -0.5584, -0.2234),
        T(-0.6633,  0.2375, -0.7615, -0.4331, -0.6776,  0.9655,  0.5955,
          -0.1696,  0.0489,  0.2039, -0.1507,  0.4565, -0.1931,  0.6757,
          -0.3218, -0.4453,  0.5237,  0.5118),
        T( 0.2712,  0.4025,  0.4534,  0.1564, -0.8237, -0.7177, -0.6903,
          0.9113, -0.7242, -0.1201,  0.4225,  0.7558,  0.4654,  0.0269,
          -0.6523,  0.7215,  0.5759, -0.9191),
        T(-0.7278,  0.3445,  0.3975,  0.9021,  0.7082,  0.2123, -0.9800,
          -0.0595, -0.8521, -0.2043,  0.9772,  0.2687,  0.2799, -0.9653,
          -0.6214,  0.3094,  0.0445,  0.5934),
        T( 0.2104,  0.3228, -0.0701, -0.0629,  0.4457, -0.5006,  0.6682,
          0.9234,  0.6650,  0.2999,  0.3199, -0.5112, -0.5266,  0.9799,
          -0.7906, -0.7965,  0.9010, -0.4560),
        T( 0.7867, -0.5065,  0.2917,  0.3705, -0.2114,  0.7550,  0.2628,
          0.1663,  0.2781,  0.4573, -0.1049,  0.6505, -0.5029,  0.5609,
          0.0971,  0.3630, -0.3165,  0.8093),
        T( 0.2900,  0.8729, -0.6296, -0.0511, -0.3488, -0.4096,  0.1224,
          -0.8658,  0.7535, -0.3045, -0.0223, -0.1846,  0.9813, -0.7863,
          0.2759,  0.3717,  0.4554, -0.5247),
        T( 0.0567, -0.2388,  0.2436,  0.4092,  0.6151,  0.6023, -0.6828,
          -0.6908, -0.3991,  0.1047, -0.3844, -0.5358,  0.9821,  0.1690,
          -0.3726,  0.0491, -0.4564,  0.5474),
        T( 0.4244,  0.6524,  0.2153, -0.5842,  0.4735,  0.1675, -0.8107,
          -0.3436,  0.5013, -0.8525,  0.6745,  0.4886,  0.0334,  0.0776,
          -0.9487, -0.9951, -0.7563, -0.8719),
        T(-0.6183, -0.4649, -0.7113, -0.8485, -0.1538,  0.0715,  0.2242,
          0.0629, -0.7821,  0.7599, -0.8241, -0.4093,  0.1514, -0.7615,
          -0.2735, -0.2368, -0.1939, -0.9840)))))

    val backbone = mask.buildBackbone(256, 256)

    backbone.evaluate()

    input = Tensor[Float](1, 3, 224, 256).rand()

    val output = mask.forward(input)

//    val inChannels = Array(256, 256*2, 256 * 4, 256 * 8)
//    val fpn = FPN[Float](inChannels, 256, topBlocks = 1)
//
//    val out2 = fpn.forward(output)
    println("done")
  }

  "build maskrcnn" should "be ok" in {

  }

  "NMS" should "be ok" in {
    val boxes = Tensor[Float](T(
      T(18.0357, 0.0000, 41.2893, 37.1173),
      T(30.0285, 6.2588, 53.1850, 39.0000),
      T(26.0422, 0.0000, 49.1954, 39.0000),
      T( 5.9485, 14.0573, 29.1708, 39.0000),
      T(42.0456, 0.0000, 57.0000, 37.1553),
      T(21.9588, 14.0357, 45.1161, 39.0000),
      T( 6.0533, 0.0000, 29.4083, 39.0000),
      T( 2.0541, 2.3791, 25.4243, 39.0000),
      T(14.0495, 2.3053, 37.3108, 39.0000),
      T(46.0309, 6.4025, 57.0000, 39.0000),
      T(22.0302, 2.4089, 45.1933, 39.0000),
      T(13.9671, 14.0175, 37.1495, 39.0000),
      T(10.0404, 0.0000, 33.3284, 33.2829),
      T(34.0374, 0.0000, 57.0000, 36.9072),
      T(38.0379, 6.2769, 57.0000, 39.0000),
      T(41.9751, 14.0583, 57.0000, 39.0000),
      T( 0.0000, 0.0000, 13.2693, 33.3124),
      T(38.0422, 0.0000, 57.0000, 28.9761),
      T( 0.0000, 14.0690, 17.1186, 39.0000),
      T( 0.0000, 6.0356, 13.2223, 39.0000),
      T( 0.0000, 0.0000, 17.3122, 39.0000),
      T(22.0270, 0.0000, 45.1928, 25.2032),
      T(46.0094, 0.0000, 57.0000, 33.0826),
      T( 0.0000, 0.0000, 33.7101, 13.0355),
      T( 2.0302, 0.0000, 25.4260, 25.4481),
      T(42.0226, 0.0000, 57.0000, 25.1449),
      T(30.0364, 0.0000, 53.0853, 25.0766),
      T(14.0171, 0.0000, 37.2881, 25.2999),
      T(34.0521, 0.0000, 57.0000, 12.9051),
      T( 0.0000, 3.8999, 57.0000, 39.0000),
      T( 2.0133, 0.0000, 49.6427, 12.9898),
      T(28.0456, 0.0000, 57.0000, 39.0000),
      T( 0.0000, 11.8925, 47.3868, 39.0000),
      T( 8.0708, 11.9606, 57.0000, 39.0000),
      T( 0.0000, 0.0000, 27.2810, 39.0000),
      T( 0.0000, 0.0000, 47.4577, 35.2592),
      T( 0.0000, 0.0000, 57.0000, 39.0000),
      T( 0.0000, 0.0000, 57.0000, 39.0000),
      T(21.9457, 0.0000, 57.0000, 12.8811),
      T( 0.0000, 0.0000, 57.0000, 39.0000),
      T( 0.0000, 0.0000, 57.0000, 27.0690),
      T(13.8674, 22.0563, 44.9398, 39.0000),
      T(33.8700, 25.9730, 57.0000, 39.0000),
      T( 0.0000, 22.0516, 20.9330, 39.0000),
      T(41.9213, 21.9873, 57.0000, 39.0000),
      T(17.8165, 0.0000, 57.0000, 16.8779),
      T( 1.7646, 18.1004, 32.9480, 39.0000),
      T(11.8512, 0.0000, 57.0000, 35.4317),
      T(29.8503, 22.0435, 57.0000, 39.0000),
      T( 9.7594, 18.0566, 40.9166, 39.0000),
      T(33.7746, 1.9632, 57.0000, 24.9071),
      T( 0.0000, 14.0776, 24.9558, 39.0000),
      T(21.7241, 18.0735, 52.8998, 39.0000),
      T( 0.0000, 0.0000, 29.2906, 29.5339),
      T(41.8249, 0.0000, 57.0000, 17.0812),
      T( 0.0000, 0.0000, 17.3257, 17.4717),
      T( 0.0000, 0.0000, 17.1572, 25.5946),
      T( 0.0000, 0.0000, 45.4454, 17.0065),
      T( 0.0000,  2.0042, 21.2122, 33.4895),
      T(37.8946, 18.1178, 57.0000, 39.0000),
      T( 0.0000,  5.9850, 25.1862, 29.1060),
      T( 1.7353,  6.0499, 33.1671, 37.4231),
      T(21.6518, 26.0054, 57.0000, 39.0000),
      T( 5.7049,  0.0000, 37.2819, 29.4436),
      T(29.7011, 14.0272, 57.0000, 39.0000),
      T(17.7255,  0.0000, 49.0772, 29.2946),
      T(29.6133,  9.9153, 57.0000, 32.7949),
      T( 0.0000, 26.0193, 32.8463, 39.0000),
      T(17.6348, 10.0788, 48.9423, 39.0000),
      T(21.6906,  2.1241, 52.9483, 33.3707),
      T( 5.6194,  0.0000, 53.3307, 21.0163),
      T(13.8104,  0.0000, 45.2210, 17.3200),
      T(13.5956,  9.9687, 57.0000, 32.8566),
      T( 5.7003, 10.0389, 37.0897, 39.0000),
      T(13.7149,  2.0202, 45.0843, 33.2768),
      T( 9.7322,  5.9888, 41.1038, 37.3045),
      T( 5.5910, 26.0368, 52.8697, 39.0000),
      T(29.7840,  0.0000, 57.0000, 17.1027),
      T( 5.7736,  0.0000, 37.3917, 17.4214),
      T( 0.0000, 13.9622, 36.9701, 36.8555),
      T( 0.0000,  9.9967, 45.0663, 32.9533),
      T( 0.0000,  0.0000, 33.2938, 21.2008),
      T( 0.0000,  0.0000, 25.3888, 17.4817),
      T(21.7062,  0.0000, 53.0319, 21.2508),
      T( 9.6736,  0.0000, 41.2481, 21.3898),
      T( 0.0000,  1.9933, 37.2186, 25.1230),
      T( 5.5202,  5.9523, 53.1432, 28.9392),
      T(25.5138,  5.9795, 57.0000, 28.8653),
      T( 0.0000, 10.0011, 28.9181, 33.0324),
      T( 5.5488, 14.0092, 52.8771, 36.8956),
      T( 9.5096,  1.9473, 57.0000, 24.9822),
      T(17.5084, 13.9728, 57.0000, 36.8385),
      T( 0.0000, 22.0156, 40.7790, 39.0000),
      T(17.5165, 22.0209, 57.0000, 39.0000),
      T( 9.5040, 17.9792, 56.7784, 39.0000),
      T( 0.0000,  5.9792, 41.1165, 29.0066)))

    val scores = Tensor[Float](
      T(0.1117, 0.8158, 0.2626, 0.4839, 0.6765, 0.7539, 0.2627, 0.0428, 0.2080,
      0.1180, 0.1217, 0.7356, 0.7118, 0.7876, 0.4183, 0.9014, 0.9969, 0.7565,
      0.2239, 0.3023, 0.1784, 0.8238, 0.5557, 0.9770, 0.4440, 0.9478, 0.7445,
      0.4892, 0.2426, 0.7003, 0.5277, 0.2472, 0.7909, 0.4235, 0.0169, 0.2209,
      0.9535, 0.7064, 0.1629, 0.8902, 0.5163, 0.0359, 0.6476, 0.3430, 0.3182,
      0.5261, 0.0447, 0.5123, 0.9051, 0.5989, 0.4450, 0.7278, 0.4563, 0.3389,
      0.6211, 0.5530, 0.6896, 0.3687, 0.9053, 0.8356, 0.3039, 0.6726, 0.5740,
      0.9233, 0.9178, 0.7590, 0.7775, 0.6179, 0.3379, 0.2170, 0.9454, 0.7116,
      0.1157, 0.6574, 0.3451, 0.0453, 0.9798, 0.5548, 0.6868, 0.4920, 0.0748,
      0.9605, 0.3271, 0.0103, 0.9516, 0.2855, 0.2324, 0.9141, 0.7668, 0.1659,
      0.4393, 0.2243, 0.8935, 0.0497, 0.1780, 0.3011))

    val thresh = 0.5f
    val inds = new Array[Int](scores.nElement())
    val nms = new Nms
    val keepN = nms.nms(scores, boxes, thresh, inds)

    val expectedOutput = Array[Float](2.0f, 5.0f, 8.0f, 9.0f, 16.0f,
      21.0f, 23.0f, 24.0f, 25.0f, 36.0f, 42.0f, 43.0f, 49.0f, 55.0f,
      64.0f, 76.0f, 77.0f, 84.0f, 87.0f, 88.0f)

    for (i <- 0 to keepN - 1) {
      require(expectedOutput.contains(inds(i) - 1), s"${i} ${inds(i)}")
    }
  }
}
