package serialization;

message BigDLModel
{
    enum ModuleType {
        ABS = 1;
        ADD = 2;
        ADDCONST = 3;
        BATCHNORM = 4;
        BILINEAR = 5;
        BIRECURRENT = 6;
        BOTTLE = 7;
        CADD = 8;
        CADDTABLE = 9;
        CDIVTABLE = 10;
        CLAMP = 11;
        CMAXTABLE = 12;
        CMINTABLE = 13;
        CMUL = 14;
        CMULTABLE = 15;
        CONCAT = 16;
        CONCATTABLE = 17;
        CONTIGUOUS = 18;
        COSINE = 19;
        COSINEDISTANCE = 20;
        CSUBTABLE = 21;
        DOTPRODUCT = 22;
        DROPOUT = 23;
        ELU = 24;
        EUCLIDEAN = 25;
        EXP = 26;
        FLATTENTABLE = 27;
        GRADIENTREVERSAL = 28;
        GRAPH = 29;
        GRU = 30;
        HARDSHRINK = 31;
        HARDTANH = 32;
        IDENTITY = 33;
        INDEX = 34;
        LINEAR = 50;
        SEQUENTIAL = 51;
        CUSTOMIZED = 53;
    }
    optional string name = 1; //model name
    repeated BigDLModel subModules = 2; // sub modules
    optional BigDLTensor weight = 3; // double weight for each layer
    optional BigDLTensor bias = 4; // double bias for each layer
    repeated string tops = 5; //module layer construct params
    repeated string bottoms = 6; //module layer construct params
    required ModuleType moduleType = 7; //module type
    optional AddParam addParam = 8; //params for add layer
    optional AddConstParam addConstParam = 9; //params for add const layer
    optional BatchNormParam batchNormParam = 10; //params for batch normalization
    optional BiLinearParam biLinearParam = 11; //params for bilinear
    optional BiRecurrentParam biRecurrentParam = 12; //params for birecurrent
    optional BottleParam bottleParam = 13; //params for bottle container
    optional CaddParam caddParam = 14; //params for cadd
    optional CaddTableParam cAddTableParam = 15; //params for concat add table
    optional ClampParam clampParam = 16; // params for Clamp
    optional CMulParam cmulParam = 17; //params for Cmul
    optional ConcatParam concatParam = 18; //params for concat
    optional CosineParam cosineParam = 19; // params for cosine
    optional DropoutParam dropoutParam = 20; // params for dropout
    optional EuclideanParam euclideanParam = 21; // params for euclidean
    optional GradientReversalParam gradientReversalParam = 22; // params for gradient reversal
    optional GRUParam gruParam = 23; // params for GRU
    optional HardShrinkParam hardShrinkParam = 24; // params for HarkShrink
    optional HardTanhParam hardTanhParam = 25; //params for HardTanh
    optional IndexParam indexParam = 26; // params for Index
    optional LinearParam linearParam = 50; // params for linear
    optional CustomParam customParam = 51; //extensible for custom params
}
enum InitMethod {
    Default = 1;
    Xavier = 2;
    BilinearFiller = 3;
}
enum RegularizerType {
    L1L2Regularizer = 1;
    L1Regularizer = 2;
    L2Regularizer = 3;
}
message BigDLTensor{
    repeated int32 size = 1; //size of tensor
    repeated double data = 2; //tensor element
}
message Regularizer {
    required RegularizerType regularizerType = 1;
    repeated double regularData = 2;
}
message AddParam {
    required int32 inputSize = 1;
}
message AddConstParam {
    required double constScalar = 1;
    optional bool inPlace = 2 [default = false];
}
message BatchNormParam {
    required int32 nOutput = 1;
    optional double eps = 2 [default = 1e-5];
    optional double momentum = 3 [default = 0.1];
    optional bool affine = 4 [default = true];
}
message BiLinearParam {
    required int32 inputSize1 = 1;
    required int32 inputSize2 = 2;
    required int32 outputSize = 3;
    optional bool biasRes = 4 [default = true];
    optional Regularizer wRegularizer = 5;
    optional Regularizer bRegularizer = 6;
}
message BiRecurrentParam {
    optional BigDLModel merge = 1;
}

message BottleParam {
    required BigDLModel module = 1;
    required int32 nInputDim = 2;
    optional int32 nOutputDim1 = 3;
}
message CaddParam {
    repeated int32 size = 1;
}
message CaddTableParam {
    optional bool inplace = 1 [default = false];
}
message ClampParam {
    required int32 min = 1;
    required int32 max = 2;
}
message CMulParam {
    repeated int32 size = 1;
}
message ConcatParam {
    required int32 dimension = 1;
}
message CosineParam {
    required int32 inputSize = 1;
    required int32 outputSize = 2;
}
message DropoutParam {
    optional double initP = 1 [default = 0.5];
    optional bool inPlace = 2 [default = false];
    optional bool scale = 3 [default = true];
}
message EuclideanParam {
    required int32 inputSize = 1;
    required int32 outputSize = 2;
    optional bool fastBackward = 3 [default= true];
}
message GradientReversalParam {
    optional double lambda = 1 [default = 1.0];
}
message GRUParam {
    required int32 inputSize = 1;
    required int32 outputSize = 2;
    optional double p = 3 [default = 0.0];
    optional Regularizer wRegularizer = 4;
    optional Regularizer uRegularizer = 5;
    optional Regularizer bRegularizer = 6;
}
message HardShrinkParam {
    optional double lambda = 1 [default = 0.5];
}
message HardTanhParam {
    optional double minValue = 1 [default = -1.0];
    optional double maxValue = 2 [default = 1.0];
    optional bool inplace = 3 [default = false];
}
message IndexParam {
    required int32 dimension = 1;
}
message LinearParam {
    required int32 inputSize = 1;
    required int32 outputSize = 2;
    optional InitMethod initMethod = 3;
    optional bool withBias = 4 [default = true];
    optional Regularizer wRegularizer = 5;
    optional Regularizer bRegularizer = 6;
}
message CustomParam {
    required string customType = 1;
    extensions 1000 to 10000;
}
